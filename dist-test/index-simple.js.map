{
  "version": 3,
  "sources": ["../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../node_modules/unenv/dist/runtime/node/perf_hooks.mjs", "../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../node_modules/unenv/dist/runtime/mock/noop.mjs", "../node_modules/unenv/dist/runtime/node/console.mjs", "../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../node_modules/unenv/dist/runtime/node/tty.mjs", "../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../src/modules/todo/client.ts", "../src/modules/todo/taskParser.ts", "../src/modules/classification/types.ts", "../src/modules/classification/classifier.ts", "../src/modules/classification/index.ts", "../src/utils/config.ts", "../src/modules/voice-sync/api.ts", "../src/modules/voice-sync/storage.ts", "../src/modules/voice-sync/index.ts", "../src/modules/audio/processor.ts", "../src/modules/fund-tracker/storage.ts", "../src/modules/fund-tracker/fund-api.ts", "../src/router/AudioProcessor.ts", "../src/index-simple.ts", "../src/modules/portfolio-tracker/index.ts", "../src/modules/portfolio-tracker/calculator.ts", "../src/modules/portfolio-tracker/portfolio-data.ts", "../src/modules/portfolio-tracker/stock-api.ts", "../src/modules/portfolio-tracker/message-formatter.ts", "../src/modules/portfolio-tracker/whatsapp-sender.ts", "../src/modules/fund-tracker/index.ts", "../src/modules/fund-tracker/types.ts", "../src/modules/fund-tracker/calculator.ts", "../src/modules/fund-tracker/fund-data.ts", "../src/modules/portfolio-tracker/types.ts"],
  "sourceRoot": "dist-test",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import { IntervalHistogram, RecordableHistogram } from \"./internal/perf_hooks/histogram.mjs\";\nimport { performance, Performance, PerformanceEntry, PerformanceMark, PerformanceMeasure, PerformanceObserverEntryList, PerformanceObserver, PerformanceResourceTiming } from \"./internal/perf_hooks/performance.mjs\";\nexport * from \"./internal/perf_hooks/performance.mjs\";\nimport { NODE_PERFORMANCE_GC_MAJOR, NODE_PERFORMANCE_GC_MINOR, NODE_PERFORMANCE_GC_INCREMENTAL, NODE_PERFORMANCE_GC_WEAKCB, NODE_PERFORMANCE_GC_FLAGS_NO, NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED, NODE_PERFORMANCE_GC_FLAGS_FORCED, NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING, NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE, NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY, NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE, NODE_PERFORMANCE_ENTRY_TYPE_GC, NODE_PERFORMANCE_ENTRY_TYPE_HTTP, NODE_PERFORMANCE_ENTRY_TYPE_HTTP2, NODE_PERFORMANCE_ENTRY_TYPE_NET, NODE_PERFORMANCE_ENTRY_TYPE_DNS, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN, NODE_PERFORMANCE_MILESTONE_ENVIRONMENT, NODE_PERFORMANCE_MILESTONE_NODE_START, NODE_PERFORMANCE_MILESTONE_V8_START, NODE_PERFORMANCE_MILESTONE_LOOP_START, NODE_PERFORMANCE_MILESTONE_LOOP_EXIT, NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE } from \"./internal/perf_hooks/constants.mjs\";\nexport const constants = {\n\tNODE_PERFORMANCE_GC_MAJOR,\n\tNODE_PERFORMANCE_GC_MINOR,\n\tNODE_PERFORMANCE_GC_INCREMENTAL,\n\tNODE_PERFORMANCE_GC_WEAKCB,\n\tNODE_PERFORMANCE_GC_FLAGS_NO,\n\tNODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED,\n\tNODE_PERFORMANCE_GC_FLAGS_FORCED,\n\tNODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY,\n\tNODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE,\n\tNODE_PERFORMANCE_ENTRY_TYPE_GC,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP2,\n\tNODE_PERFORMANCE_ENTRY_TYPE_NET,\n\tNODE_PERFORMANCE_ENTRY_TYPE_DNS,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN,\n\tNODE_PERFORMANCE_MILESTONE_ENVIRONMENT,\n\tNODE_PERFORMANCE_MILESTONE_NODE_START,\n\tNODE_PERFORMANCE_MILESTONE_V8_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_EXIT,\n\tNODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE\n};\nexport const monitorEventLoopDelay = function(_options) {\n\treturn new IntervalHistogram();\n};\nexport const createHistogram = function(_options) {\n\treturn new RecordableHistogram();\n};\nexport default {\n\tPerformance,\n\tPerformanceMark,\n\tPerformanceEntry,\n\tPerformanceMeasure,\n\tPerformanceObserverEntryList,\n\tPerformanceObserver,\n\tPerformanceResourceTiming,\n\tperformance,\n\tconstants,\n\tcreateHistogram,\n\tmonitorEventLoopDelay\n};\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "export const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\tconst seconds = Math.trunc(now / 1e3);\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "import { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport { ReadStream } from \"./internal/tty/read-stream.mjs\";\nexport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport const isatty = function() {\n\treturn false;\n};\nexport default {\n\tReadStream: WriteStream,\n\tWriteStream,\n\tisatty\n};\n", "export const NODE_VERSION = \"22.14.0\";\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\tref() {}\n\tunref() {}\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\tmainModule = undefined;\n\tdomain = undefined;\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nexport const { exit, platform, nextTick } = getBuiltinModule(\n  \"node:process\"\n);\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  hrtime: UnenvHrTime,\n  nextTick\n});\nexport const {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  finalization,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  on,\n  off,\n  once,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n} = unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "import { \n  TodoistTask, \n  TodoistTaskResponse, \n  TodoistProject, \n  TodoistLabel,\n  TodoistError \n} from './types';\n\nexport class TodoistClient {\n  private apiKey: string;\n  private baseUrl = 'https://api.todoist.com/rest/v2';\n  \n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n  \n  private async request<T>(\n    endpoint: string,\n    method: 'GET' | 'POST' | 'PUT' | 'DELETE' = 'GET',\n    body?: any\n  ): Promise<T> {\n    const url = `${this.baseUrl}/${endpoint}`;\n    \n    const headers: HeadersInit = {\n      'Authorization': `Bearer ${this.apiKey}`,\n      'Content-Type': 'application/json'\n    };\n    \n    const response = await fetch(url, {\n      method,\n      headers,\n      body: body ? JSON.stringify(body) : undefined\n    });\n    \n    if (!response.ok) {\n      let error: TodoistError;\n      try {\n        error = await response.json();\n      } catch (e) {\n        throw new Error(`Todoist API error: ${response.status} ${response.statusText}`);\n      }\n      throw new Error(error.error || `Todoist API error: ${response.status}`);\n    }\n    \n    // DELETE requests return empty response\n    if (method === 'DELETE') {\n      return {} as T;\n    }\n    \n    return await response.json() as T;\n  }\n  \n  async createTask(task: TodoistTask): Promise<TodoistTaskResponse> {\n    return await this.request<TodoistTaskResponse>('tasks', 'POST', task);\n  }\n  \n  async getTasks(filter?: string): Promise<TodoistTaskResponse[]> {\n    const params = new URLSearchParams();\n    if (filter) {\n      params.append('filter', filter);\n    }\n    \n    const endpoint = params.toString() ? `tasks?${params.toString()}` : 'tasks';\n    return await this.request<TodoistTaskResponse[]>(endpoint);\n  }\n  \n  async getTask(taskId: string): Promise<TodoistTaskResponse> {\n    return await this.request<TodoistTaskResponse>(`tasks/${taskId}`);\n  }\n  \n  async updateTask(taskId: string, updates: Partial<TodoistTask>): Promise<TodoistTaskResponse> {\n    return await this.request<TodoistTaskResponse>(`tasks/${taskId}`, 'POST', updates);\n  }\n  \n  async closeTask(taskId: string): Promise<void> {\n    await this.request(`tasks/${taskId}/close`, 'POST');\n  }\n  \n  async reopenTask(taskId: string): Promise<void> {\n    await this.request(`tasks/${taskId}/reopen`, 'POST');\n  }\n  \n  async deleteTask(taskId: string): Promise<void> {\n    await this.request(`tasks/${taskId}`, 'DELETE');\n  }\n  \n  async getProjects(): Promise<TodoistProject[]> {\n    return await this.request<TodoistProject[]>('projects');\n  }\n  \n  async getLabels(): Promise<TodoistLabel[]> {\n    return await this.request<TodoistLabel[]>('labels');\n  }\n  \n  async testConnection(): Promise<boolean> {\n    try {\n      await this.getProjects();\n      return true;\n    } catch (error) {\n      console.error('Todoist connection test failed:', error);\n      return false;\n    }\n  }\n}\n\nexport function formatDueDate(date: Date): string {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n}\n\nexport function parsePriority(text: string): number {\n  const lowerText = text.toLowerCase();\n  \n  if (lowerText.includes('urgente') || lowerText.includes('urgent')) {\n    return 4;\n  } else if (lowerText.includes('muito importante') || lowerText.includes('alta prioridade')) {\n    return 3;\n  } else if (lowerText.includes('importante') || lowerText.includes('prioridade')) {\n    return 2;\n  }\n  \n  return 1; // normal priority\n}\n\nexport function parseDueString(text: string): string | undefined {\n  const lowerText = text.toLowerCase();\n  \n  if (lowerText.includes('hoje') || lowerText.includes('today')) {\n    return 'hoje';\n  } else if (lowerText.includes('amanh\u00E3') || lowerText.includes('tomorrow')) {\n    return 'amanh\u00E3';\n  } else if (lowerText.includes('semana que vem') || lowerText.includes('pr\u00F3xima semana')) {\n    return 'pr\u00F3xima semana';\n  } else if (lowerText.includes('pr\u00F3ximo m\u00EAs') || lowerText.includes('m\u00EAs que vem')) {\n    return 'pr\u00F3ximo m\u00EAs';\n  }\n  \n  // Try to find date patterns\n  const dateMatch = text.match(/(\\d{1,2})[\\/\\-](\\d{1,2})/);\n  if (dateMatch) {\n    const [_, day, month] = dateMatch;\n    return `${day}/${month}`;\n  }\n  \n  return undefined;\n}", "import { ParsedTaskFromAudio } from './types';\nimport { parsePriority, parseDueString } from './client';\n\nexport async function parseTaskFromTranscription(\n  transcription: string,\n  openaiApiKey: string\n): Promise<ParsedTaskFromAudio> {\n  // First, try simple parsing\n  const simpleTask = simpleParseTask(transcription);\n  \n  // If OpenAI key is available, use AI for better parsing\n  if (openaiApiKey) {\n    try {\n      return await aiParseTask(transcription, openaiApiKey);\n    } catch (error) {\n      console.error('AI parsing failed, falling back to simple parsing:', error);\n      return simpleTask;\n    }\n  }\n  \n  return simpleTask;\n}\n\nfunction simpleParseTask(transcription: string): ParsedTaskFromAudio {\n  // Remove common task-related prefixes\n  const prefixes = ['tarefa', 'lembrete', 'lembrar de', 'preciso', 'fazer'];\n  let content = transcription;\n  \n  for (const prefix of prefixes) {\n    const regex = new RegExp(`^${prefix}:?\\\\s*`, 'i');\n    content = content.replace(regex, '');\n  }\n  \n  return {\n    content: content.trim(),\n    due_string: parseDueString(transcription),\n    priority: parsePriority(transcription),\n    labels: extractLabels(transcription)\n  };\n}\n\nasync function aiParseTask(\n  transcription: string,\n  openaiApiKey: string\n): Promise<ParsedTaskFromAudio> {\n  const prompt = `Extract task information from this transcription. Return a JSON object with:\n- content: the main task description (clean and concise)\n- due_string: due date in Portuguese if mentioned (hoje, amanh\u00E3, pr\u00F3xima semana, etc)\n- priority: 1-4 (1=normal, 4=urgent)\n- labels: array of relevant labels\n\nTranscription: \"${transcription}\"\n\nReturn only valid JSON, no markdown.`;\n\n  const response = await fetch('https://api.openai.com/v1/chat/completions', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${openaiApiKey}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      model: 'gpt-3.5-turbo',\n      messages: [\n        {\n          role: 'system',\n          content: 'You are a task parser. Extract task information from transcriptions and return structured JSON.'\n        },\n        {\n          role: 'user',\n          content: prompt\n        }\n      ],\n      temperature: 0.3,\n      max_tokens: 200\n    })\n  });\n  \n  if (!response.ok) {\n    throw new Error(`OpenAI API error: ${response.status}`);\n  }\n  \n  const data = await response.json() as any;\n  const content = data.choices[0].message.content;\n  \n  try {\n    const parsed = JSON.parse(content);\n    return {\n      content: parsed.content || transcription,\n      due_string: parsed.due_string,\n      priority: parsed.priority || 1,\n      labels: parsed.labels || []\n    };\n  } catch (error) {\n    console.error('Failed to parse AI response:', content);\n    return simpleParseTask(transcription);\n  }\n}\n\nfunction extractLabels(text: string): string[] {\n  const labels: string[] = [];\n  \n  // Common labels to detect\n  const labelMap: Record<string, string[]> = {\n    'trabalho': ['trabalho', 'job', 'office', 'escrit\u00F3rio'],\n    'pessoal': ['pessoal', 'personal', 'casa', 'home'],\n    'compras': ['comprar', 'compras', 'shopping', 'mercado'],\n    'sa\u00FAde': ['m\u00E9dico', 'dentista', 'consulta', 'exame', 'sa\u00FAde'],\n    'financeiro': ['pagar', 'conta', 'boleto', 'banco', 'dinheiro']\n  };\n  \n  const lowerText = text.toLowerCase();\n  \n  for (const [label, keywords] of Object.entries(labelMap)) {\n    if (keywords.some(keyword => lowerText.includes(keyword))) {\n      labels.push(label);\n    }\n  }\n  \n  return labels;\n}", "export interface ClassificationResult {\n  type: 'task' | 'note' | 'fund_add' | 'fund_remove' | 'fund_quote' | 'fund_portfolio' | 'fund_update' | 'github_discovery';\n  confidence: number;\n  reasoning?: string;\n}\n\nexport interface ClassificationContext {\n  transcription: string;\n  userId: string;\n  timestamp: Date;\n}\n\nexport interface ClassificationHistory {\n  userId: string;\n  transcription: string;\n  aiClassification: ClassificationResult;\n  userOverride?: 'task' | 'note' | 'fund_add' | 'fund_remove' | 'fund_quote' | 'fund_portfolio' | 'fund_update' | 'github_discovery';\n  timestamp: Date;\n}", "import { ClassificationResult, ClassificationContext } from './types';\n\nexport class TranscriptionClassifier {\n  private openAiApiKey: string;\n  private confidenceThreshold: number;\n\n  constructor(openAiApiKey: string, confidenceThreshold = 0.8) {\n    this.openAiApiKey = openAiApiKey;\n    this.confidenceThreshold = confidenceThreshold;\n  }\n\n  async classify(context: ClassificationContext): Promise<ClassificationResult> {\n    try {\n      const aiResult = await this.aiClassify(context.transcription);\n      \n      if (aiResult.confidence >= this.confidenceThreshold) {\n        return aiResult;\n      }\n      \n      const keywordResult = this.keywordClassify(context.transcription);\n      \n      return {\n        type: aiResult.type,\n        confidence: (aiResult.confidence + keywordResult.confidence) / 2,\n        reasoning: `AI: ${aiResult.reasoning}, Keywords: ${keywordResult.reasoning}`\n      };\n    } catch (error) {\n      console.error('AI classification failed, using keyword fallback:', error);\n      return this.keywordClassify(context.transcription);\n    }\n  }\n\n  private async aiClassify(transcription: string): Promise<ClassificationResult> {\n    const systemPrompt = `You are a classifier that determines the type of a transcription. Options:\n\n1. TASK - General action item to be done\n2. NOTE - Information, thought, or observation to remember\n3. FUND_ADD - Adding funds/cotas to investment portfolio\n4. FUND_REMOVE - Removing/selling funds/cotas from portfolio  \n5. FUND_QUOTE - Getting current price/quote of a fund\n6. FUND_PORTFOLIO - Portfolio summary or overview request\n7. FUND_UPDATE - Updating existing fund positions\n8. GITHUB_DISCOVERY - Request for GitHub projects discovery or information\n\nTASK examples:\n- \"Comprar leite amanh\u00E3\"\n- \"Ligar para o dentista\"\n- \"Pagar conta de luz\"\n\nNOTE examples:\n- \"Ideia para o projeto novo\"\n- \"Lembrete que o Jo\u00E3o gosta de caf\u00E9\"\n\nFUND_ADD examples:\n- \"Adicionar 100 cotas do fundo Bradesco FIA\"\n- \"Comprei 50 cotas do XP A\u00E7\u00F5es\"\n- \"Investi 1000 reais no fundo Verde\"\n\nFUND_REMOVE examples:\n- \"Vendi 50 cotas do XP A\u00E7\u00F5es\"\n- \"Remover o fundo Bradesco da carteira\"\n- \"Resgatar 200 cotas do fundo Ita\u00FA\"\n\nFUND_QUOTE examples:\n- \"Qual a cota do PETR11?\"\n- \"Pre\u00E7o atual do fundo XP A\u00E7\u00F5es\"\n- \"Cota\u00E7\u00E3o do Bradesco FIA hoje\"\n\nFUND_PORTFOLIO examples:\n- \"Meu portfolio de fundos\"\n- \"Resumo da carteira\"\n- \"Como est\u00E1 minha carteira de investimentos\"\n\nFUND_UPDATE examples:\n- \"Atualizar quantidade do fundo Verde para 150 cotas\"\n- \"Modificar posi\u00E7\u00E3o no Bradesco FIA\"\n\nGITHUB_DISCOVERY examples:\n- \"Descobrir novos projetos GitHub\"\n- \"Quais projetos interessantes sa\u00EDram hoje\"\n- \"Descobertas do GitHub\"\n- \"Projetos novos no GitHub\"\n\nRespond with JSON only: {\"type\": \"task\"|\"note\"|\"fund_add\"|\"fund_remove\"|\"fund_quote\"|\"fund_portfolio\"|\"fund_update\"|\"github_discovery\", \"confidence\": 0.0-1.0, \"reasoning\": \"brief explanation\"}`;\n\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${this.openAiApiKey}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        model: 'gpt-3.5-turbo',\n        messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: `Classify this transcription: \"${transcription}\"` }\n        ],\n        temperature: 0.3,\n        max_tokens: 150,\n        response_format: { type: \"json_object\" }\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error(`OpenAI API error: ${response.status}`);\n    }\n\n    const data = await response.json() as any;\n    const result = JSON.parse(data.choices[0].message.content);\n    \n    return {\n      type: result.type as 'task' | 'note' | 'fund_add' | 'fund_remove' | 'fund_quote' | 'fund_portfolio' | 'fund_update' | 'github_discovery',\n      confidence: result.confidence || 0.5,\n      reasoning: result.reasoning || 'AI classification'\n    };\n  }\n\n  private keywordClassify(transcription: string): ClassificationResult {\n    const lowerText = transcription.toLowerCase();\n    \n    const taskKeywords = [\n      'fazer', 'preciso', 'tenho que', 'lembrar de', 'comprar', \n      'pagar', 'ligar', 'enviar', 'marcar', 'agendar', 'terminar',\n      'completar', 'resolver', 'consertar', 'preparar', 'organizar'\n    ];\n    \n    const noteKeywords = [\n      'ideia', 'pensei', 'observei', 'notei', 'lembrete sobre',\n      'informa\u00E7\u00E3o', 'descobri', 'aprendi', 'interessante', 'curioso',\n      'reflex\u00E3o', 'insight', 'dica', 'sugest\u00E3o'\n    ];\n    \n    // Check for fund keywords first\n    let fundAddScore = 0;\n    let fundRemoveScore = 0;\n    let fundQuoteScore = 0;\n    let fundPortfolioScore = 0;\n    let fundUpdateScore = 0;\n    let githubDiscoveryScore = 0;\n    \n    // Strong action verbs get priority scoring\n    const strongActionVerbs = {\n      add: ['adicionar', 'comprei', 'investi', 'aplicar', 'aportar'],\n      remove: ['vendi', 'vender', 'remover', 'resgatar', 'liquidar'],\n      update: ['atualizar', 'modificar', 'alterar', 'mudar'],\n      quote: ['qual', 'pre\u00E7o', 'cota\u00E7\u00E3o', 'quanto'],\n      portfolio: ['portfolio', 'carteira', 'resumo', 'posi\u00E7\u00F5es'],\n      github: ['descobrir', 'github', 'projetos', 'descobertas', 'novos projetos', 'reposit\u00F3rios']\n    };\n    \n    // Check for strong action verbs first (higher priority)\n    Object.entries(strongActionVerbs).forEach(([action, verbs]) => {\n      verbs.forEach(verb => {\n        if (lowerText.includes(verb)) {\n          switch (action) {\n            case 'add': fundAddScore += 3; break;\n            case 'remove': fundRemoveScore += 3; break;\n            case 'update': fundUpdateScore += 3; break;\n            case 'quote': fundQuoteScore += 3; break;\n            case 'portfolio': fundPortfolioScore += 3; break;\n            case 'github': githubDiscoveryScore += 3; break;\n          }\n        }\n      });\n    });\n    \n    // Then check for weaker supporting keywords\n    const supportingKeywords = {\n      add: ['cotas do'],\n      quote: ['cota', 'valor', 'hoje'],\n      portfolio: ['fundos', 'investimentos']\n    };\n    \n    Object.entries(supportingKeywords).forEach(([action, keywords]) => {\n      keywords.forEach(keyword => {\n        if (lowerText.includes(keyword)) {\n          switch (action) {\n            case 'add': fundAddScore += 1; break;\n            case 'quote': fundQuoteScore += 1; break;\n            case 'portfolio': fundPortfolioScore += 1; break;\n          }\n        }\n      });\n    });\n    \n    // Fund-specific patterns\n    const fundNamePattern = /\\b(fundo|fia|fii|fidc|etf|bradesco|itau|santander|bb|xp|btg|nubank|inter|petr\\d+|vale\\d+|itub\\d+|bbdc\\d+|cotas?)\\b/i;\n    const isFundRelated = fundNamePattern.test(lowerText);\n    \n    // Special boosting for specific patterns\n    if (isFundRelated) {\n      // Boost all fund scores when fund-related terms are detected\n      if (fundAddScore > 0) fundAddScore += 2;\n      if (fundRemoveScore > 0) fundRemoveScore += 2;\n      if (fundQuoteScore > 0) fundQuoteScore += 2;\n      if (fundPortfolioScore > 0) fundPortfolioScore += 2;\n      if (fundUpdateScore > 0) fundUpdateScore += 2;\n    }\n    \n    // Additional specific patterns\n    if (/\\b(atualizar|modificar|alterar|mudar)\\b.*\\b(fundo|quantidade|posi\u00E7\u00E3o)\\b/i.test(lowerText)) {\n      fundUpdateScore += 3;\n    }\n    \n    if (/\\b(qual|pre\u00E7o|cota\u00E7\u00E3o|cota|valor)\\b.*\\b(fundo|\\w+\\d+)\\b/i.test(lowerText)) {\n      fundQuoteScore += 2;\n    }\n    \n    // Check for GitHub discovery specific patterns\n    if (/\\b(github|projetos?\\s+github|descobrir\\s+projetos?|novos?\\s+projetos?)\\b/i.test(lowerText)) {\n      githubDiscoveryScore += 2;\n    }\n\n    // Determine classification priority\n    const allScores = {\n      fund_add: fundAddScore,\n      fund_remove: fundRemoveScore,\n      fund_quote: fundQuoteScore,\n      fund_portfolio: fundPortfolioScore,\n      fund_update: fundUpdateScore,\n      github_discovery: githubDiscoveryScore\n    };\n    \n    const maxScore = Math.max(...Object.values(allScores));\n    \n    if (maxScore > 0) {\n      const matchedType = Object.keys(allScores).find(key => \n        allScores[key as keyof typeof allScores] === maxScore\n      ) as 'fund_add' | 'fund_remove' | 'fund_quote' | 'fund_portfolio' | 'fund_update' | 'github_discovery';\n      \n      return {\n        type: matchedType,\n        confidence: Math.min(0.9, maxScore / 3),\n        reasoning: `Keywords detected: ${matchedType.replace(/^(fund_|github_)/, '')}`\n      };\n    }\n    \n    // Fall back to task/note classification\n    let taskScore = 0;\n    let noteScore = 0;\n    \n    taskKeywords.forEach(keyword => {\n      if (lowerText.includes(keyword)) taskScore++;\n    });\n    \n    noteKeywords.forEach(keyword => {\n      if (lowerText.includes(keyword)) noteScore++;\n    });\n    \n    const futureTimeRegex = /\\b(amanh\u00E3|depois|pr\u00F3xim[oa]|semana que vem|m\u00EAs que vem|hoje|mais tarde)\\b/;\n    if (futureTimeRegex.test(lowerText)) {\n      taskScore += 2;\n    }\n    \n    const actionVerbRegex = /^(preciso|tenho que|vou|devo|posso)/;\n    if (actionVerbRegex.test(lowerText)) {\n      taskScore += 2;\n    }\n    \n    const totalScore = taskScore + noteScore || 1;\n    const taskProbability = taskScore / totalScore;\n    \n    return {\n      type: taskProbability > 0.5 ? 'task' : 'note',\n      confidence: Math.abs(taskProbability - 0.5) * 2,\n      reasoning: `Task keywords: ${taskScore}, Note keywords: ${noteScore}`\n    };\n  }\n\n  isHighConfidence(result: ClassificationResult): boolean {\n    return result.confidence >= this.confidenceThreshold;\n  }\n}", "export * from './types';\nexport * from './classifier';", "import { Env } from '@/types/env';\nimport { ObsidianConfig, GitHubConfig } from '@/modules/obsidian';\n\nexport class Config {\n  static isClassificationEnabled(env: Env): boolean {\n    return env.CLASSIFICATION_ENABLED !== 'false';\n  }\n\n  static getClassificationThreshold(env: Env): number {\n    const threshold = parseFloat(env.CLASSIFICATION_CONFIDENCE_THRESHOLD || '0.8');\n    return isNaN(threshold) ? 0.8 : Math.max(0, Math.min(1, threshold));\n  }\n\n  static hasObsidianConfig(env: Env): boolean {\n    return !!(env.OBSIDIAN_STORAGE_TYPE && this.getStorageConfig(env));\n  }\n\n  static getObsidianConfig(env: Env): ObsidianConfig | null {\n    if (!env.OBSIDIAN_STORAGE_TYPE) {\n      return null;\n    }\n\n    return {\n      storageType: env.OBSIDIAN_STORAGE_TYPE,\n      dailyNote: env.OBSIDIAN_NOTE_FORMAT !== 'individual',\n      noteFormat: env.OBSIDIAN_NOTE_FORMAT || 'daily',\n      notePath: env.OBSIDIAN_NOTE_PATH\n    };\n  }\n\n  static getGitHubConfig(env: Env): GitHubConfig | null {\n    if (env.OBSIDIAN_STORAGE_TYPE !== 'github') {\n      return null;\n    }\n\n    // Log what we're checking\n    console.log('GitHub config check in getGitHubConfig:', {\n      hasToken: !!env.GITHUB_TOKEN,\n      tokenLength: env.GITHUB_TOKEN?.length,\n      owner: env.GITHUB_OWNER,\n      repo: env.GITHUB_REPO,\n      vaultPath: env.OBSIDIAN_VAULT_PATH\n    });\n\n    if (!env.GITHUB_TOKEN || !env.GITHUB_OWNER || !env.GITHUB_REPO || !env.OBSIDIAN_VAULT_PATH) {\n      console.error('Missing required GitHub configuration:', {\n        hasToken: !!env.GITHUB_TOKEN,\n        hasOwner: !!env.GITHUB_OWNER,\n        hasRepo: !!env.GITHUB_REPO,\n        hasVaultPath: !!env.OBSIDIAN_VAULT_PATH\n      });\n      return null;\n    }\n\n    return {\n      token: env.GITHUB_TOKEN,\n      owner: env.GITHUB_OWNER,\n      repo: env.GITHUB_REPO,\n      branch: env.GITHUB_BRANCH || 'main',\n      vaultPath: env.OBSIDIAN_VAULT_PATH\n    };\n  }\n\n  private static getStorageConfig(env: Env): any {\n    switch (env.OBSIDIAN_STORAGE_TYPE) {\n      case 'github':\n        return this.getGitHubConfig(env);\n      default:\n        return null;\n    }\n  }\n}", "// Voice Note Sync API for Obsidian Plugin Integration\n\nexport interface StoredVoiceNote {\n  id: string;\n  transcription: string;\n  timestamp: string;\n  phone: string;\n  processed: boolean;\n  metadata?: {\n    audioUrl?: string;\n    duration?: number;\n    classification?: string;\n  };\n}\n\nexport class VoiceNoteSyncAPI {\n  private env: any;\n\n  constructor(env: any) {\n    this.env = env;\n  }\n\n  /**\n   * GET /api/voice-notes/unprocessed\n   * Returns all unprocessed voice notes for Obsidian sync\n   */\n  async getUnprocessedNotes(request: Request): Promise<Response> {\n    try {\n      // Verify API key\n      const authHeader = request.headers.get('Authorization');\n      if (!this.isValidApiKey(authHeader)) {\n        return new Response('Unauthorized', { \n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // Get unprocessed notes from KV storage\n      const notes = await this.fetchUnprocessedNotesFromKV();\n      \n      return new Response(JSON.stringify(notes), {\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Headers': 'authorization, content-type, Authorization, Content-Type'\n        }\n      });\n    } catch (error) {\n      console.error('Error fetching unprocessed notes:', error);\n      return new Response(JSON.stringify({ error: 'Internal Server Error' }), { \n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  }\n\n  /**\n   * POST /api/voice-notes/{id}/processed\n   * Mark a voice note as processed\n   */\n  async markNoteAsProcessed(request: Request, noteId: string): Promise<Response> {\n    try {\n      // Verify API key\n      const authHeader = request.headers.get('Authorization');\n      if (!this.isValidApiKey(authHeader)) {\n        return new Response('Unauthorized', { \n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // Mark note as processed in KV storage\n      await this.markNoteProcessedInKV(noteId);\n      \n      return new Response(JSON.stringify({ success: true }), {\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Headers': 'authorization, content-type, Authorization, Content-Type'\n        }\n      });\n    } catch (error) {\n      console.error('Error marking note as processed:', error);\n      return new Response(JSON.stringify({ error: 'Internal Server Error' }), { \n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  }\n\n  /**\n   * OPTIONS handler for CORS\n   */\n  async handleOptions(): Promise<Response> {\n    return new Response(null, {\n      status: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n        'Access-Control-Allow-Headers': 'authorization, content-type, Authorization, Content-Type',\n        'Access-Control-Max-Age': '86400'\n      }\n    });\n  }\n\n  private isValidApiKey(authHeader: string | null): boolean {\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return false;\n    }\n    \n    const apiKey = authHeader.substring(7);\n    const validApiKey = this.env.OBSIDIAN_API_KEY || this.env.API_KEY;\n    \n    return apiKey === validApiKey;\n  }\n\n  private async fetchUnprocessedNotesFromKV(): Promise<StoredVoiceNote[]> {\n    if (!this.env.USER_CONFIGS) {\n      throw new Error('KV storage not configured');\n    }\n\n    const notes: StoredVoiceNote[] = [];\n    \n    // Get all voice note keys\n    const list = await this.env.USER_CONFIGS.list({ prefix: 'voice_note:' });\n    \n    for (const key of list.keys) {\n      try {\n        const noteData = await this.env.USER_CONFIGS.get(key.name, 'json');\n        if (noteData && !noteData.processed) {\n          notes.push({\n            id: key.name.replace('voice_note:', ''),\n            transcription: noteData.transcription,\n            timestamp: noteData.timestamp,\n            phone: noteData.phone,\n            processed: false,\n            metadata: noteData.metadata\n          });\n        }\n      } catch (error) {\n        console.error(`Error reading note ${key.name}:`, error);\n      }\n    }\n    \n    // Sort by timestamp (newest first)\n    notes.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n    \n    return notes;\n  }\n\n  private async markNoteProcessedInKV(noteId: string): Promise<void> {\n    if (!this.env.USER_CONFIGS) {\n      throw new Error('KV storage not configured');\n    }\n\n    const key = `voice_note:${noteId}`;\n    const noteData = await this.env.USER_CONFIGS.get(key, 'json');\n    \n    if (noteData) {\n      noteData.processed = true;\n      noteData.processedAt = new Date().toISOString();\n      await this.env.USER_CONFIGS.put(key, JSON.stringify(noteData));\n    }\n  }\n}\n", "// Enhanced KV Note Storage for Voice Sync\n\nexport class EnhancedKVNoteStorage {\n  private kv: any;\n\n  constructor(kv: any) {\n    this.kv = kv;\n  }\n\n  async saveNote(transcription: string, userPhone: string, metadata?: any): Promise<string> {\n    const noteId = this.generateNoteId();\n    const timestamp = new Date().toISOString();\n    \n    const noteData = {\n      id: noteId,\n      transcription,\n      phone: userPhone,\n      timestamp,\n      processed: false,\n      metadata: metadata || {}\n    };\n    \n    const key = `voice_note:${noteId}`;\n    await this.kv.put(key, JSON.stringify(noteData));\n    \n    console.log('Voice note saved for sync:', {\n      noteId,\n      userPhone,\n      contentLength: transcription.length\n    });\n    \n    return noteId;\n  }\n\n  async getNoteById(noteId: string): Promise<any | null> {\n    const key = `voice_note:${noteId}`;\n    return await this.kv.get(key, 'json');\n  }\n\n  async markNoteAsProcessed(noteId: string): Promise<void> {\n    const key = `voice_note:${noteId}`;\n    const noteData = await this.kv.get(key, 'json');\n    \n    if (noteData) {\n      noteData.processed = true;\n      noteData.processedAt = new Date().toISOString();\n      await this.kv.put(key, JSON.stringify(noteData));\n    }\n  }\n\n  private generateNoteId(): string {\n    return `${Date.now()}-${Math.random().toString(36).substring(2, 15)}`;\n  }\n}\n", "export * from './api';\nexport * from './storage';\n", "import { ZApiWebhookPayload } from '@/services/whatsapp/types';\nimport { TodoistClient } from '@/modules/todo/client';\nimport { parseTaskFromTranscription } from '@/modules/todo/taskParser';\nimport { TranscriptionClassifier, ClassificationResult } from '@/modules/classification';\n\nimport { Config } from '@/utils/config';\n\ninterface AudioContext {\n  env: any;\n  userId: string;\n  todoistToken?: string;\n  zapiPayload: ZApiWebhookPayload;\n}\n\nexport async function processAudioMessage(\n  payload: ZApiWebhookPayload,\n  context: AudioContext\n): Promise<void> {\n  // Get the user phone number from various possible fields - moved outside try block\n  const userPhone = payload.from || payload.phone || payload.senderNumber;\n  \n  try {\n    if (!payload.audio) {\n      throw new Error('No audio data in payload');\n    }\n    \n    let audioBuffer: ArrayBuffer;\n    \n    // Handle both URL-based and base64-encoded audio\n    if (payload.audio.audioUrl) {\n      // Download audio from Z-API URL (legacy format)\n      const audioResponse = await fetch(payload.audio.audioUrl);\n      if (!audioResponse.ok) {\n        throw new Error(`Failed to download audio: ${audioResponse.status}`);\n      }\n      audioBuffer = await audioResponse.arrayBuffer();\n    } else if (payload.audio.data) {\n      // Decode base64 audio data (new format)\n      const base64Data = payload.audio.data;\n      const binaryString = atob(base64Data);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      audioBuffer = bytes.buffer;\n    } else {\n      throw new Error('No audio URL or data found in payload');\n    }\n    \n    console.log('Audio info:', {\n      originalMimeType: payload.audio.mimeType || payload.audio.mimetype,\n      bufferSize: audioBuffer.byteLength,\n      bufferSizeMB: (audioBuffer.byteLength / 1024 / 1024).toFixed(2),\n      duration: payload.audio.seconds || payload.audio.duration\n    });\n    \n    // Convert to blob for OpenAI\n    const audioMimeType = payload.audio.mimeType || payload.audio.mimetype || 'audio/ogg';\n    const audioBlob = new Blob([audioBuffer], { type: audioMimeType });\n    \n    console.log('Sending to Whisper:', {\n      blobSize: audioBlob.size,\n      blobType: audioBlob.type\n    });\n    \n    // Transcribe with OpenAI Whisper\n    const transcription = await transcribeAudio(audioBlob, context.env);\n    \n    if (!transcription || transcription.trim().length === 0) {\n      await sendMessage(\n        context,\n        userPhone,\n        '\u274C N\u00E3o consegui transcrever o \u00E1udio. Por favor, tente falar mais claramente.'\n      );\n      return;\n    }\n    \n    // Classify and process the transcribed text\n    await classifyAndProcess(transcription, payload, context, userPhone);\n    \n  } catch (error) {\n    console.error('Audio processing error:', error);\n    \n    // Send appropriate error message to user\n    let errorMessage = '\u274C Erro ao processar o \u00E1udio.';\n    \n    if (error.message?.includes('API key not configured')) {\n      errorMessage = '\u274C Bot n\u00E3o est\u00E1 configurado corretamente. Por favor, configure a chave da API OpenAI.';\n    } else if (error.message?.includes('Invalid OpenAI API key')) {\n      errorMessage = '\u274C Chave da API OpenAI inv\u00E1lida. Por favor, verifique a configura\u00E7\u00E3o.';\n    } else if (error.message?.includes('timeout')) {\n      errorMessage = '\u274C O processamento do \u00E1udio demorou muito. Por favor, tente com um \u00E1udio mais curto.';\n    } else if (error.message?.includes('Failed to download audio')) {\n      errorMessage = '\u274C Erro ao baixar o \u00E1udio. Por favor, tente novamente.';\n    }\n    \n    await sendMessage(context, userPhone, errorMessage);\n    throw error;\n  }\n}\n\nasync function transcribeAudio(audioBlob: Blob, env: any): Promise<string> {\n  // Check if API key is configured\n  if (!env.OPENAI_API_KEY) {\n    console.error('OPENAI_API_KEY not configured');\n    throw new Error('OpenAI API key not configured. Please set OPENAI_API_KEY environment variable.');\n  }\n  \n  const formData = new FormData();\n  \n  // Determine file extension based on mime type\n  const mimeToExt: Record<string, string> = {\n    'audio/mpeg': 'mp3',\n    'audio/mp3': 'mp3',\n    'audio/mp4': 'mp4',\n    'audio/ogg': 'ogg',\n    'audio/wav': 'wav',\n    'audio/webm': 'webm'\n  };\n  \n  const fileExt = mimeToExt[audioBlob.type] || 'mp3';\n  const fileName = `audio.${fileExt}`;\n  \n  console.log('Whisper request:', {\n    fileName,\n    fileSize: audioBlob.size,\n    mimeType: audioBlob.type,\n    hasApiKey: !!env.OPENAI_API_KEY\n  });\n  \n  formData.append('file', audioBlob, fileName);\n  formData.append('model', 'whisper-1');\n  formData.append('language', 'pt');\n  \n  try {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 second timeout\n    \n    let response;\n    try {\n      response = await fetch('https://api.openai.com/v1/audio/transcriptions', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${env.OPENAI_API_KEY}`\n        },\n        body: formData,\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (error.name === 'AbortError') {\n        throw new Error('Transcription timeout after 30 seconds');\n      }\n      throw error;\n    }\n    \n    if (!response.ok) {\n      const error = await response.text();\n      console.error('Whisper API error:', {\n        status: response.status,\n        error,\n        hasApiKey: !!env.OPENAI_API_KEY,\n        apiKeyLength: env.OPENAI_API_KEY?.length\n      });\n      \n      if (response.status === 401) {\n        throw new Error('Invalid OpenAI API key. Please check your OPENAI_API_KEY configuration.');\n      }\n      \n      throw new Error(`OpenAI API error (${response.status}): ${error}`);\n    }\n    \n    const result = await response.json() as { text: string };\n    console.log('Transcription result:', {\n      text: result.text,\n      length: result.text.length\n    });\n    \n    return result.text;\n  } catch (error) {\n    console.error('Transcription error:', error);\n    throw error;\n  }\n}\n\nasync function classifyAndProcess(\n  transcription: string,\n  payload: ZApiWebhookPayload,\n  context: AudioContext,\n  userPhone: string\n): Promise<void> {\n  let classification: ClassificationResult | null = null;\n  \n  // Check if classification is enabled\n  if (Config.isClassificationEnabled(context.env)) {\n    const classifier = new TranscriptionClassifier(\n      context.env.OPENAI_API_KEY,\n      Config.getClassificationThreshold(context.env)\n    );\n    \n    try {\n      classification = await classifier.classify({\n        transcription,\n        userId: userPhone,\n        timestamp: new Date()\n      });\n      \n      const getClassificationDisplay = (type: string) => {\n        switch (type) {\n          case 'task': return { emoji: '\uD83D\uDCCB', text: 'Tarefa' };\n          case 'note': return { emoji: '\uD83D\uDCDD', text: 'Nota' };\n          case 'fund_add': return { emoji: '\uD83D\uDCC8', text: 'Adicionar Fundo' };\n          case 'fund_remove': return { emoji: '\uD83D\uDCC9', text: 'Remover Fundo' };\n          case 'fund_quote': return { emoji: '\uD83D\uDCB0', text: 'Cota\u00E7\u00E3o de Fundo' };\n          case 'fund_portfolio': return { emoji: '\uD83D\uDCCA', text: 'Portfolio de Fundos' };\n          case 'fund_update': return { emoji: '\uD83D\uDD04', text: 'Atualizar Fundo' };\n          default: return { emoji: '\uD83D\uDCCB', text: 'Tarefa' };\n        }\n      };\n      \n      const { emoji: classificationEmoji, text: classificationText } = getClassificationDisplay(classification.type);\n      const confidenceText = classification.confidence >= 0.8 ? '\u2705' : '\u26A0\uFE0F';\n      \n      console.log('Classification result:', {\n        type: classification.type,\n        confidence: classification.confidence,\n        reasoning: classification.reasoning\n      });\n      \n      await sendMessage(\n        context,\n        userPhone,\n        `${classificationEmoji} Transcri\u00E7\u00E3o: \"${transcription}\"\\n\\n${confidenceText} Classificado como: ${classificationText} (${Math.round(classification.confidence * 100)}% de confian\u00E7a)`\n      );\n      \n      // If low confidence, we could implement buttons here in the future\n      if (classification.confidence < Config.getClassificationThreshold(context.env)) {\n        await sendMessage(\n          context,\n          userPhone,\n          '\u26A0\uFE0F Confian\u00E7a baixa na classifica\u00E7\u00E3o. Processando como ' + classificationText\n        );\n      }\n    } catch (error) {\n      console.error('Classification failed:', error);\n      classification = { type: 'task', confidence: 0.5, reasoning: 'Classification failed, defaulting to task' };\n    }\n  } else {\n    // Default to task if classification is disabled\n    classification = { type: 'task', confidence: 1.0, reasoning: 'Classification disabled' };\n  }\n  \n  // Process based on classification\n  if (classification.type === 'note') {\n    await processAsNote(transcription, payload, context, userPhone);\n  } else if (classification.type.startsWith('fund_')) {\n    await processAsFund(classification.type, transcription, payload, context, userPhone);\n  } else {\n    await processAsTask(transcription, payload, context, userPhone);\n  }\n}\n\nasync function processAsNote(\n  transcription: string,\n  payload: ZApiWebhookPayload,\n  context: AudioContext,\n  userPhone: string\n): Promise<void> {\n  try {\n    await sendMessage(\n      context,\n      userPhone,\n      '\uD83D\uDCDD Salvando nota para sincroniza\u00E7\u00E3o com Obsidian...'\n    );\n    \n    // Save to KV storage for voice sync\n    const { EnhancedKVNoteStorage } = await import('@/modules/voice-sync');\n    const kvStorage = new EnhancedKVNoteStorage(context.env.USER_CONFIGS);\n    const noteId = await kvStorage.saveNote(transcription, userPhone, {\n      audioUrl: payload.audio?.audioUrl,\n      duration: payload.audio?.seconds || payload.audio?.duration,\n      classification: 'note'\n    });\n    \n    console.log('Note saved to KV:', {\n      noteId,\n      userId: userPhone,\n      contentLength: transcription.length\n    });\n    \n    await sendMessage(\n      context,\n      userPhone,\n      `\u2705 Nota salva para sincroniza\u00E7\u00E3o!\\n\\n\uD83D\uDCDD \"${transcription.substring(0, 100)}${transcription.length > 100 ? '...' : ''}\"\\n\\n\uD83D\uDCA1 A nota ser\u00E1 sincronizada automaticamente com seu Obsidian.`\n    );\n  } catch (error) {\n    console.error('Error saving note to KV:', error);\n    await sendMessage(\n      context,\n      userPhone,\n      '\u274C Erro ao salvar nota. Criando tarefa no Todoist como fallback...'\n    );\n    await processAsTask(`[NOTA] ${transcription}`, payload, context, userPhone);\n  }\n}\n\nasync function processAsTask(\n  transcription: string,\n  payload: ZApiWebhookPayload,\n  context: AudioContext,\n  userPhone: string\n): Promise<void> {\n  await sendMessage(\n    context,\n    userPhone,\n    '\u2728 Criando tarefa no Todoist...'\n  );\n  \n  if (!context.todoistToken) {\n    await sendMessage(\n      context,\n      userPhone,\n      '\u274C Token do Todoist n\u00E3o configurado. Adicione TODOIST_API_TOKEN nas vari\u00E1veis de ambiente.'\n    );\n    return;\n  }\n  \n  try {\n    // Parse task from transcription\n    const parsedTask = await parseTaskFromTranscription(\n      transcription,\n      context.env.OPENAI_API_KEY\n    );\n    \n    // Create Todoist client\n    const todoistClient = new TodoistClient(context.todoistToken);\n    \n    // Create the task\n    const createdTask = await todoistClient.createTask({\n      content: parsedTask.content,\n      due_string: parsedTask.due_string,\n      priority: parsedTask.priority,\n      labels: parsedTask.labels\n    });\n    \n    let taskMessage = `\u2705 Tarefa criada no Todoist!\\n\\n\uD83D\uDCCC \"${createdTask.content}\"`;\n    \n    if (createdTask.due) {\n      taskMessage += `\\n\uD83D\uDCC5 Prazo: ${createdTask.due.string}`;\n    }\n    \n    if (parsedTask.priority && parsedTask.priority > 1) {\n      const priorityEmojis = ['', '', '\u26A1', '\uD83D\uDD25', '\uD83D\uDEA8'];\n      taskMessage += `\\n${priorityEmojis[parsedTask.priority]} Prioridade: ${\n        parsedTask.priority === 4 ? 'Urgente' : \n        parsedTask.priority === 3 ? 'Alta' : 'M\u00E9dia'\n      }`;\n    }\n    \n    if (parsedTask.labels && parsedTask.labels.length > 0) {\n      taskMessage += `\\n\uD83C\uDFF7\uFE0F Etiquetas: ${parsedTask.labels.join(', ')}`;\n    }\n    \n    await sendMessage(context, userPhone, taskMessage);\n    \n  } catch (error) {\n    console.error('Error creating Todoist task:', error);\n    await sendMessage(\n      context,\n      userPhone,\n      '\u274C Erro ao criar tarefa no Todoist. Verifique se o token est\u00E1 correto.'\n    );\n  }\n}\n\nasync function processAsFund(\n  fundType: string,\n  transcription: string,\n  payload: ZApiWebhookPayload,\n  context: AudioContext,\n  userPhone: string\n): Promise<void> {\n  try {\n    // Import AudioProcessor dynamically to avoid circular dependency\n    const { AudioProcessor } = await import('@/router/AudioProcessor');\n    const audioProcessor = new AudioProcessor(context.env);\n    \n    // Use the proper fund command processor\n    await audioProcessor.processFundCommand(transcription, fundType, payload);\n    \n  } catch (error) {\n    console.error('Error processing fund command:', error);\n    \n    // Fallback to creating a task\n    await sendMessage(\n      context,\n      userPhone,\n      '\u274C Erro ao processar comando de fundo. Criando tarefa como fallback...'\n    );\n    \n    let taskContent = '';\n    \n    switch (fundType) {\n      case 'fund_add':\n        taskContent = `[FUNDO-ADICIONAR] ${transcription}`;\n        break;\n      case 'fund_remove':\n        taskContent = `[FUNDO-REMOVER] ${transcription}`;\n        break;\n      case 'fund_quote':\n        taskContent = `[FUNDO-COTACAO] ${transcription}`;\n        break;\n      case 'fund_portfolio':\n        taskContent = `[FUNDO-PORTFOLIO] ${transcription}`;\n        break;\n      case 'fund_update':\n        taskContent = `[FUNDO-ATUALIZAR] ${transcription}`;\n        break;\n      default:\n        taskContent = `[FUNDO] ${transcription}`;\n    }\n    \n    await processAsTask(taskContent, payload, context, userPhone);\n  }\n}\n\n// Helper function to send messages back through Z-API\nasync function sendMessage(context: AudioContext, to: string, message: string): Promise<void> {\n  try {\n    if (!context.env.Z_API_INSTANCE_ID || !context.env.Z_API_INSTANCE_TOKEN || !context.env.Z_API_SECURITY_TOKEN) {\n      console.error('Z-API credentials not configured');\n      return;\n    }\n    \n    const url = `https://api.z-api.io/instances/${context.env.Z_API_INSTANCE_ID}/token/${context.env.Z_API_INSTANCE_TOKEN}/send-text`;\n    const body = {\n      phone: to,\n      message\n    };\n    \n    console.log('Sending Z-API message:', {\n      url,\n      to,\n      messageLength: message.length,\n      hasClientToken: !!context.env.Z_API_SECURITY_TOKEN\n    });\n    \n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Client-Token': context.env.Z_API_SECURITY_TOKEN\n      },\n      body: JSON.stringify(body)\n    });\n    \n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Z-API error response:', {\n        status: response.status,\n        statusText: response.statusText,\n        error: errorText\n      });\n      throw new Error(`Z-API error: ${response.status} - ${errorText}`);\n    }\n    \n    console.log('Z-API message sent successfully');\n  } catch (error) {\n    console.error('Error sending message via Z-API:', error);\n  }\n}", "import { FundPosition, UserFundPortfolio } from './types';\n\nexport class KVFundStorage {\n  private kv: KVNamespace;\n  \n  constructor(kv: KVNamespace) {\n    this.kv = kv;\n  }\n  \n  async saveFundPortfolio(userId: string, portfolio: UserFundPortfolio): Promise<void> {\n    if (!userId) {\n      throw new Error('User ID is required');\n    }\n    \n    const portfolioKey = this.getPortfolioKey(userId);\n    const portfolioWithTimestamp = {\n      ...portfolio,\n      userId,\n      lastUpdated: new Date().toISOString()\n    };\n    \n    await this.kv.put(portfolioKey, JSON.stringify(portfolioWithTimestamp));\n    await this.updateUserIndex(userId);\n  }\n  \n  async getFundPortfolio(userId: string): Promise<UserFundPortfolio> {\n    if (!userId) {\n      throw new Error('User ID is required');\n    }\n    \n    const portfolioKey = this.getPortfolioKey(userId);\n    const portfolioData = await this.kv.get(portfolioKey);\n    \n    if (!portfolioData) {\n      return this.createEmptyPortfolio(userId);\n    }\n    \n    try {\n      const portfolio: UserFundPortfolio = JSON.parse(portfolioData);\n      return this.validateAndFixPortfolio(portfolio, userId);\n    } catch (error) {\n      console.error('Error parsing portfolio data:', error);\n      return this.createEmptyPortfolio(userId);\n    }\n  }\n  \n  async addFundPosition(userId: string, position: FundPosition): Promise<void> {\n    if (!userId || !position) {\n      throw new Error('User ID and position are required');\n    }\n    \n    // Normalize the position to use consistent property names\n    const normalizedPosition = this.normalizePosition(position);\n    \n    if (!normalizedPosition.cnpj || !normalizedPosition.name || (normalizedPosition.quotas || 0) <= 0) {\n      throw new Error('Invalid position data');\n    }\n    \n    const portfolio = await this.getFundPortfolio(userId);\n    \n    // Check if position already exists\n    const existingIndex = portfolio.positions.findIndex(p => p.cnpj === normalizedPosition.cnpj);\n    \n    if (existingIndex >= 0) {\n      // Update existing position by combining quotas and calculating new average price\n      const existing = this.normalizePosition(portfolio.positions[existingIndex]);\n      const totalQuotas = (existing.quotas || 0) + (normalizedPosition.quotas || 0);\n      const totalInvested = (existing.investedAmount || 0) + (normalizedPosition.investedAmount || 0);\n      const newAvgPrice = totalInvested / totalQuotas;\n      \n      portfolio.positions[existingIndex] = {\n        ...existing,\n        quotas: totalQuotas,\n        investedAmount: totalInvested,\n        avgPrice: newAvgPrice\n      };\n    } else {\n      // Add new position\n      const newPosition: FundPosition = {\n        ...normalizedPosition,\n        id: normalizedPosition.id || this.generatePositionId(normalizedPosition.cnpj),\n        avgPrice: (normalizedPosition.investedAmount || 0) / (normalizedPosition.quotas || 1)\n      };\n      portfolio.positions.push(newPosition);\n    }\n    \n    this.recalculatePortfolio(portfolio);\n    await this.saveFundPortfolio(userId, portfolio);\n  }\n  \n  async updateFundPosition(userId: string, cnpj: string, newShares: number, newAvgPrice?: number): Promise<void> {\n    if (!userId || !cnpj) {\n      throw new Error('User ID and CNPJ are required');\n    }\n    \n    if (newShares < 0) {\n      throw new Error('Shares cannot be negative');\n    }\n    \n    const portfolio = await this.getFundPortfolio(userId);\n    const positionIndex = portfolio.positions.findIndex(p => p.cnpj === cnpj);\n    \n    if (positionIndex === -1) {\n      throw new Error('Position not found');\n    }\n    \n    if (newShares === 0) {\n      // Remove position if shares is 0\n      portfolio.positions.splice(positionIndex, 1);\n    } else {\n      const position = portfolio.positions[positionIndex];\n      position.quotas = newShares;\n      \n      if (newAvgPrice !== undefined) {\n        position.avgPrice = newAvgPrice;\n        position.investedAmount = newShares * newAvgPrice;\n      }\n    }\n    \n    this.recalculatePortfolio(portfolio);\n    await this.saveFundPortfolio(userId, portfolio);\n  }\n  \n  async removeFundPosition(userId: string, cnpj: string): Promise<void> {\n    if (!userId || !cnpj) {\n      throw new Error('User ID and CNPJ are required');\n    }\n    \n    const portfolio = await this.getFundPortfolio(userId);\n    const initialLength = portfolio.positions.length;\n    \n    portfolio.positions = portfolio.positions.filter(p => p.cnpj !== cnpj);\n    \n    if (portfolio.positions.length === initialLength) {\n      throw new Error('Position not found');\n    }\n    \n    this.recalculatePortfolio(portfolio);\n    await this.saveFundPortfolio(userId, portfolio);\n  }\n  \n  async getAllUserPortfolios(): Promise<string[]> {\n    const indexKey = 'fund-portfolios:index';\n    const indexData = await this.kv.get(indexKey);\n    \n    if (!indexData) {\n      return [];\n    }\n    \n    try {\n      return JSON.parse(indexData);\n    } catch (error) {\n      console.error('Error parsing portfolios index:', error);\n      return [];\n    }\n  }\n  \n  async deletePortfolio(userId: string): Promise<void> {\n    if (!userId) {\n      throw new Error('User ID is required');\n    }\n    \n    const portfolioKey = this.getPortfolioKey(userId);\n    await this.kv.delete(portfolioKey);\n    await this.removeFromUserIndex(userId);\n  }\n  \n  // Helper methods\n  private getPortfolioKey(userId: string): string {\n    return `fund-portfolio:${userId}`;\n  }\n  \n  private generatePositionId(cnpj: string): string {\n    const timestamp = new Date().toISOString();\n    return `fund-pos:${cnpj}:${timestamp}:${Math.random().toString(36).substr(2, 6)}`;\n  }\n  \n  private createEmptyPortfolio(userId: string): UserFundPortfolio {\n    return {\n      userId,\n      positions: [],\n      totalInvested: 0,\n      currentValue: 0,\n      totalPerformance: 0,\n      totalPerformancePercent: 0,\n      lastUpdated: new Date().toISOString()\n    };\n  }\n  \n  private validateAndFixPortfolio(portfolio: UserFundPortfolio, userId: string): UserFundPortfolio {\n    const validPortfolio: UserFundPortfolio = {\n      userId,\n      positions: Array.isArray(portfolio.positions) ? portfolio.positions : [],\n      totalInvested: portfolio.totalInvested || 0,\n      currentValue: portfolio.currentValue || 0,\n      totalPerformance: portfolio.totalPerformance || 0,\n      totalPerformancePercent: portfolio.totalPerformancePercent || 0,\n      lastUpdated: portfolio.lastUpdated || new Date().toISOString()\n    };\n    \n    // Normalize and validate positions\n    validPortfolio.positions = validPortfolio.positions\n      .map(position => this.normalizePosition(position))\n      .filter(position => {\n        const name = position.name || position.fundName;\n        const quotas = position.quotas || position.shares || 0;\n        const investedAmount = position.investedAmount || 0;\n        \n        return position.cnpj && \n               name && \n               typeof quotas === 'number' && \n               quotas > 0 &&\n               typeof investedAmount === 'number' &&\n               investedAmount > 0;\n      });\n    \n    // Ensure each position has required fields\n    validPortfolio.positions.forEach(position => {\n      if (!position.id) {\n        position.id = this.generatePositionId(position.cnpj);\n      }\n      const quotas = position.quotas || position.shares || 0;\n      const investedAmount = position.investedAmount || 0;\n      if (!position.avgPrice && quotas > 0) {\n        position.avgPrice = investedAmount / quotas;\n      }\n    });\n    \n    return validPortfolio;\n  }\n  \n  private recalculatePortfolio(portfolio: UserFundPortfolio): void {\n    portfolio.totalInvested = portfolio.positions.reduce((sum, pos) => {\n      const investedAmount = pos.investedAmount || 0;\n      return sum + investedAmount;\n    }, 0);\n    \n    // Current value calculation depends on having currentQuotaValue for each position\n    let hasCurrentValues = true;\n    portfolio.currentValue = 0;\n    \n    for (const position of portfolio.positions) {\n      const quotas = position.quotas || position.shares || 0;\n      const investedAmount = position.investedAmount || 0;\n      \n      if (position.currentQuotaValue !== undefined) {\n        position.currentValue = quotas * position.currentQuotaValue;\n        position.performance = position.currentValue - investedAmount;\n        position.performancePercent = investedAmount > 0 \n          ? (position.performance / investedAmount) * 100 \n          : 0;\n        portfolio.currentValue += position.currentValue;\n      } else {\n        hasCurrentValues = false;\n        position.currentValue = investedAmount; // fallback\n        position.performance = 0;\n        position.performancePercent = 0;\n        portfolio.currentValue += investedAmount;\n      }\n    }\n    \n    if (hasCurrentValues) {\n      portfolio.totalPerformance = portfolio.currentValue - portfolio.totalInvested;\n      portfolio.totalPerformancePercent = portfolio.totalInvested > 0 \n        ? (portfolio.totalPerformance / portfolio.totalInvested) * 100 \n        : 0;\n    } else {\n      portfolio.totalPerformance = 0;\n      portfolio.totalPerformancePercent = 0;\n    }\n    \n    portfolio.lastUpdated = new Date().toISOString();\n  }\n  \n  private async updateUserIndex(userId: string): Promise<void> {\n    const indexKey = 'fund-portfolios:index';\n    const indexData = await this.kv.get(indexKey);\n    \n    let userIds: string[] = [];\n    if (indexData) {\n      try {\n        userIds = JSON.parse(indexData);\n      } catch (error) {\n        console.error('Error parsing user index:', error);\n        userIds = [];\n      }\n    }\n    \n    if (!userIds.includes(userId)) {\n      userIds.push(userId);\n      await this.kv.put(indexKey, JSON.stringify(userIds));\n    }\n  }\n  \n  private async removeFromUserIndex(userId: string): Promise<void> {\n    const indexKey = 'fund-portfolios:index';\n    const indexData = await this.kv.get(indexKey);\n    \n    if (!indexData) {\n      return;\n    }\n    \n    try {\n      let userIds: string[] = JSON.parse(indexData);\n      userIds = userIds.filter(id => id !== userId);\n      await this.kv.put(indexKey, JSON.stringify(userIds));\n    } catch (error) {\n      console.error('Error updating user index:', error);\n    }\n  }\n  \n  private normalizePosition(position: FundPosition): FundPosition {\n    // Normalize property names to support both legacy and new formats\n    const name = position.name || position.fundName || '';\n    const quotas = position.quotas || position.shares || 0;\n    const purchaseDate = position.purchaseDate || position.addedDate || new Date().toISOString();\n    const investedAmount = position.investedAmount || (quotas * position.avgPrice) || 0;\n    \n    return {\n      ...position,\n      name,\n      fundName: name, // Keep both for compatibility\n      quotas,\n      shares: quotas, // Keep both for compatibility\n      purchaseDate,\n      addedDate: purchaseDate, // Keep both for compatibility\n      investedAmount\n    };\n  }\n}\n", "import { FundSearchResult, FundDetails, LatestQuoteResponse, ZaisenAPIResponse } from './types';\n\nexport class ZaisenFundAPI {\n  private baseUrl: string;\n  private apiKey: string;\n\n  constructor(baseUrl: string, apiKey: string) {\n    this.baseUrl = baseUrl.endsWith('/') ? baseUrl.slice(0, -1) : baseUrl;\n    this.apiKey = apiKey;\n  }\n\n  private async makeRequest<T>(endpoint: string, params?: Record<string, string>): Promise<T> {\n    const url = new URL(`${this.baseUrl}${endpoint}`);\n    \n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        if (value) {\n          url.searchParams.append(key, value);\n        }\n      });\n    }\n\n    const response = await fetch(url.toString(), {\n      headers: {\n        'X-API-Key': this.apiKey,\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`API request failed: ${response.status} ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  async searchFunds(query: string, limit: number = 20): Promise<FundSearchResult[]> {\n    try {\n      // Use the working /fundos endpoint instead of /fundos/search\n      const response = await this.makeRequest<ZaisenAPIResponse<FundSearchResult>>(\n        '/api/v1/fundos',\n        {\n          nome: query,\n          limit: limit.toString(),\n        }\n      );\n\n      return response.funds || [];\n    } catch (error) {\n      console.error('Error searching funds:', error);\n      throw new Error(`Failed to search funds: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  async getFundQuote(cnpj: string): Promise<LatestQuoteResponse | null> {\n    try {\n      const cleanCnpj = cnpj.replace(/[^\\d]/g, '');\n\n      const response = await this.makeRequest<LatestQuoteResponse>(\n        `/api/v1/fundos/${cleanCnpj}/ultima-cota`\n      );\n\n      return response;\n    } catch (error) {\n      console.error(`Error fetching quote for CNPJ ${cnpj}:`, error);\n      return null;\n    }\n  }\n\n  async getFundDetails(cnpj: string): Promise<FundDetails | null> {\n    try {\n      const cleanCnpj = cnpj.replace(/[^\\d]/g, '');\n\n      const response = await this.makeRequest<FundDetails>(\n        `/api/v1/fundos/${cleanCnpj}`,\n        {\n          include_latest_quota: 'true',\n        }\n      );\n\n      return response;\n    } catch (error) {\n      console.error(`Error fetching details for CNPJ ${cnpj}:`, error);\n      return null;\n    }\n  }\n\n  async searchFundsByCNPJ(cnpj: string): Promise<FundSearchResult[]> {\n    try {\n      const cleanCnpj = cnpj.replace(/[^\\d]/g, '');\n      const formattedCnpj = cleanCnpj.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, '$1.$2.$3/$4-$5');\n\n      // Use the working /fundos endpoint instead of /fundos/search\n      const response = await this.makeRequest<ZaisenAPIResponse<FundSearchResult>>(\n        '/api/v1/fundos',\n        {\n          cnpj: formattedCnpj,\n          limit: '1',\n        }\n      );\n\n      return response.funds || [];\n    } catch (error) {\n      console.error(`Error searching fund by CNPJ ${cnpj}:`, error);\n      throw new Error(`Failed to search fund by CNPJ: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  async searchFundsByClass(className: string, limit: number = 50): Promise<FundSearchResult[]> {\n    try {\n      // Use the working /fundos endpoint instead of /fundos/search\n      const response = await this.makeRequest<ZaisenAPIResponse<FundSearchResult>>(\n        '/api/v1/fundos',\n        {\n          classe: className,\n          limit: limit.toString(),\n        }\n      );\n\n      return response.funds || [];\n    } catch (error) {\n      console.error(`Error searching funds by class ${className}:`, error);\n      throw new Error(`Failed to search funds by class: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  async searchFundsByManager(managerName: string, limit: number = 50): Promise<FundSearchResult[]> {\n    try {\n      // Use the working /fundos endpoint instead of /fundos/search\n      const response = await this.makeRequest<ZaisenAPIResponse<FundSearchResult>>(\n        '/api/v1/fundos',\n        {\n          gestor: managerName,\n          limit: limit.toString(),\n        }\n      );\n\n      return response.funds || [];\n    } catch (error) {\n      console.error(`Error searching funds by manager ${managerName}:`, error);\n      throw new Error(`Failed to search funds by manager: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n}\n\nexport async function createFundAPI(): Promise<ZaisenFundAPI> {\n  const baseUrl = process.env.ZAISEN_API_URL;\n  const apiKey = process.env.ZAISEN_API_KEY;\n\n  if (!baseUrl) {\n    throw new Error('ZAISEN_API_URL environment variable is required');\n  }\n\n  if (!apiKey) {\n    throw new Error('ZAISEN_API_KEY environment variable is required');\n  }\n\n  return new ZaisenFundAPI(baseUrl, apiKey);\n}\n", "import { Env } from '@/types/env';\nimport { ZApiWebhookPayload } from '@/services/whatsapp/types';\nimport { processAudioMessage } from '@/modules/audio/processor';\nimport { KVFundStorage } from '@/modules/fund-tracker/storage';\nimport { ZaisenFundAPI } from '@/modules/fund-tracker/fund-api';\nimport { FundPosition } from '@/modules/fund-tracker/types';\n\nexport class AudioProcessor {\n  private env: Env;\n  \n  constructor(env: Env) {\n    this.env = env;\n  }\n  \n  public async handleAudioMessage(payload: ZApiWebhookPayload): Promise<void> {\n    const userPhone = payload.from || payload.phone || payload.senderNumber;\n    \n    try {\n      if (!payload.audio) {\n        console.log('Invalid audio message received');\n        return;\n      }\n      \n      // Send initial response\n      await this.sendResponse(userPhone, '\uD83C\uDFA4 \u00C1udio recebido! Processando transcri\u00E7\u00E3o...');\n      const context = {\n        env: this.env,\n        userId: userPhone,\n        todoistToken: this.env.TODOIST_API_TOKEN,\n        zapiPayload: payload\n      };\n      \n      await processAudioMessage(payload, context);\n      \n    } catch (error) {\n      console.error('Error processing audio:', error);\n      await this.sendResponse(\n        userPhone,\n        '\u274C Erro ao processar o \u00E1udio. Por favor, tente novamente.'\n      );\n    }\n  }\n\n  public async processFundCommand(\n    transcription: string, \n    classification: string, \n    payload: ZApiWebhookPayload\n  ): Promise<void> {\n    try {\n      const userId = payload.phone;\n      \n      // Initialize fund services\n      const fundStorage = new KVFundStorage(this.env.USER_CONFIGS);\n      let fundAPI: ZaisenFundAPI | null = null;\n      \n      // Only initialize API for operations that need it\n      if (['fund_quote', 'fund_add'].includes(classification) && \n          this.env.ZAISEN_API_URL && this.env.ZAISEN_API_KEY) {\n        fundAPI = new ZaisenFundAPI(this.env.ZAISEN_API_URL, this.env.ZAISEN_API_KEY);\n      }\n\n      switch (classification) {\n        case 'fund_add':\n          await this.handleFundAdd(transcription, userId, fundStorage, fundAPI);\n          break;\n        case 'fund_remove':\n          await this.handleFundRemove(transcription, userId, fundStorage);\n          break;\n        case 'fund_quote':\n          await this.handleFundQuote(transcription, userId, fundAPI);\n          break;\n        case 'fund_portfolio':\n          await this.handleFundPortfolio(userId, fundStorage);\n          break;\n        case 'fund_update':\n          await this.handleFundUpdate(transcription, userId, fundStorage);\n          break;\n        default:\n          await this.sendResponse(\n            payload.phone,\n            '\u274C Comando de fundo n\u00E3o reconhecido.'\n          );\n      }\n    } catch (error) {\n      console.error('Error processing fund command:', error);\n      await this.sendResponse(\n        payload.phone,\n        '\u274C Erro ao processar comando de fundo. Tente novamente ou seja mais espec\u00EDfico.'\n      );\n    }\n  }\n\n  private async handleFundAdd(\n    transcription: string,\n    userId: string,\n    fundStorage: KVFundStorage,\n    fundAPI: ZaisenFundAPI | null\n  ): Promise<void> {\n    await this.sendResponse(userId, '\uD83D\uDCC8 Processando adi\u00E7\u00E3o de fundo...');\n\n    try {\n      const fundData = this.parseFundAddCommand(transcription);\n      \n      if (!fundData.name && !fundData.cnpj) {\n        await this.sendResponse(\n          userId,\n          '\u274C N\u00E3o consegui identificar o nome ou CNPJ do fundo. Fale algo como: \"Adicionar 100 cotas do fundo XYZ que comprei por 50 reais cada\"'\n        );\n        return;\n      }\n\n      if (!fundData.quantity || fundData.quantity <= 0) {\n        await this.sendResponse(\n          userId,\n          '\u274C Quantidade de cotas n\u00E3o identificada. Especifique quantas cotas foram compradas.'\n        );\n        return;\n      }\n\n      // If we have a fund name but no CNPJ, try to find it via API\n      if (!fundData.cnpj && fundData.name && fundAPI) {\n        const searchResults = await fundAPI.searchFunds(fundData.name, 5);\n        \n        if (searchResults.length === 0) {\n          await this.sendResponse(\n            userId,\n            `\u274C N\u00E3o encontrei o fundo \"${fundData.name}\". Tente usar o CNPJ ou verificar o nome.`\n          );\n          return;\n        }\n\n        if (searchResults.length === 1) {\n          fundData.cnpj = searchResults[0].cnpj;\n          fundData.name = searchResults[0].nome;\n        } else {\n          const options = searchResults.slice(0, 3)\n            .map((fund, index) => `${index + 1}. ${fund.nome} (${fund.cnpj})`)\n            .join('\\n');\n          \n          await this.sendResponse(\n            userId,\n            `\uD83D\uDD0D Encontrei ${searchResults.length} fundos com nome similar:\\n\\n${options}\\n\\nPor favor, especifique o CNPJ ou nome completo.`\n          );\n          return;\n        }\n      }\n\n      // Calculate average price if not provided\n      if (!fundData.avgPrice && fundData.totalAmount) {\n        fundData.avgPrice = fundData.totalAmount / fundData.quantity;\n      } else if (!fundData.avgPrice) {\n        await this.sendResponse(\n          userId,\n          '\u274C Pre\u00E7o por cota n\u00E3o identificado. Fale algo como: \"comprei por 50 reais cada\" ou \"investimento total foi 5000 reais\"'\n        );\n        return;\n      }\n\n      const position: FundPosition = {\n        cnpj: fundData.cnpj!,\n        name: fundData.name!,\n        quotas: fundData.quantity,\n        avgPrice: fundData.avgPrice,\n        investedAmount: fundData.quantity * fundData.avgPrice,\n        purchaseDate: new Date().toISOString()\n      };\n\n      await fundStorage.addFundPosition(userId, position);\n\n      await this.sendResponse(\n        userId,\n        `\u2705 Fundo adicionado ao seu portf\u00F3lio!\\n\\n\uD83D\uDCCA ${position.name}\\n\uD83D\uDCB0 ${position.quotas} cotas a R$ ${position.avgPrice.toFixed(2)}\\n\uD83D\uDCB5 Total investido: R$ ${(position.investedAmount || 0).toFixed(2)}`\n      );\n\n    } catch (error) {\n      console.error('Error adding fund:', error);\n      await this.sendResponse(\n        userId,\n        '\u274C Erro ao adicionar fundo. Verifique os dados e tente novamente.'\n      );\n    }\n  }\n\n  private async handleFundRemove(\n    transcription: string,\n    userId: string,\n    fundStorage: KVFundStorage\n  ): Promise<void> {\n    await this.sendResponse(userId, '\uD83D\uDCC9 Processando remo\u00E7\u00E3o de fundo...');\n\n    try {\n      const removeData = this.parseFundRemoveCommand(transcription);\n      \n      if (!removeData.identifier) {\n        await this.sendResponse(\n          userId,\n          '\u274C N\u00E3o consegui identificar qual fundo remover. Fale o nome ou CNPJ do fundo.'\n        );\n        return;\n      }\n\n      const portfolio = await fundStorage.getFundPortfolio(userId);\n      \n      // Find the position by name or CNPJ\n      const position = portfolio.positions.find(p => \n        p.cnpj === removeData.identifier ||\n        (p.name && removeData.identifier && p.name.toLowerCase().includes(removeData.identifier.toLowerCase()))\n      );\n\n      if (!position) {\n        await this.sendResponse(\n          userId,\n          `\u274C Fundo \"${removeData.identifier}\" n\u00E3o encontrado no seu portf\u00F3lio.`\n        );\n        return;\n      }\n\n      if (removeData.quantity && removeData.quantity > 0) {\n        // Partial removal\n        const currentQuotas = position.quotas || 0;\n        if (removeData.quantity >= currentQuotas) {\n          // Remove completely\n          await fundStorage.removeFundPosition(userId, position.cnpj);\n          await this.sendResponse(\n            userId,\n            `\u2705 Fundo ${position.name} removido completamente do portf\u00F3lio!`\n          );\n        } else {\n          // Partial removal\n          const newQuotas = currentQuotas - removeData.quantity;\n          await fundStorage.updateFundPosition(userId, position.cnpj, newQuotas);\n          await this.sendResponse(\n            userId,\n            `\u2705 Removidas ${removeData.quantity} cotas de ${position.name}.\\nRestam ${newQuotas} cotas no portf\u00F3lio.`\n          );\n        }\n      } else {\n        // Complete removal\n        await fundStorage.removeFundPosition(userId, position.cnpj);\n        await this.sendResponse(\n          userId,\n          `\u2705 Fundo ${position.name} removido completamente do portf\u00F3lio!`\n        );\n      }\n\n    } catch (error) {\n      console.error('Error removing fund:', error);\n      await this.sendResponse(\n        userId,\n        '\u274C Erro ao remover fundo. Verifique os dados e tente novamente.'\n      );\n    }\n  }\n\n  private async handleFundQuote(\n    transcription: string,\n    userId: string,\n    fundAPI: ZaisenFundAPI | null\n  ): Promise<void> {\n    await this.sendResponse(userId, '\uD83D\uDCB0 Buscando cota\u00E7\u00E3o do fundo...');\n\n    if (!fundAPI) {\n      await this.sendResponse(\n        userId,\n        '\u274C Servi\u00E7o de cota\u00E7\u00F5es n\u00E3o configurado. Configure ZAISEN_API_URL e ZAISEN_API_KEY.'\n      );\n      return;\n    }\n\n    try {\n      const fundIdentifier = this.parseFundQuoteCommand(transcription);\n      \n      if (!fundIdentifier) {\n        await this.sendResponse(\n          userId,\n          '\u274C N\u00E3o consegui identificar qual fundo consultar. Fale o nome ou CNPJ do fundo.'\n        );\n        return;\n      }\n\n      let cnpj = fundIdentifier;\n      \n      // If it doesn't look like a CNPJ, search by name\n      if (!/^\\d{2}\\.?\\d{3}\\.?\\d{3}\\/?\\d{4}-?\\d{2}$/.test(fundIdentifier.replace(/\\s/g, ''))) {\n        const searchResults = await fundAPI.searchFunds(fundIdentifier, 1);\n        \n        if (searchResults.length === 0) {\n          await this.sendResponse(\n            userId,\n            `\u274C Fundo \"${fundIdentifier}\" n\u00E3o encontrado.`\n          );\n          return;\n        }\n        \n        cnpj = searchResults[0].cnpj;\n      }\n\n      const quote = await fundAPI.getFundQuote(cnpj);\n      \n      if (!quote) {\n        await this.sendResponse(\n          userId,\n          '\u274C N\u00E3o consegui buscar a cota\u00E7\u00E3o deste fundo. Verifique o CNPJ ou nome.'\n        );\n        return;\n      }\n\n      const changeIcon = quote.variacao_dia >= 0 ? '\uD83D\uDCC8' : '\uD83D\uDCC9';\n      const changeText = quote.variacao_dia >= 0 ? '+' : '';\n      \n      await this.sendResponse(\n        userId,\n        `\uD83D\uDCB0 Cota\u00E7\u00E3o atual:\\n\\n\uD83D\uDCCA ${quote.nome}\\n\uD83D\uDCB5 R$ ${quote.ultima_cota.toFixed(6)}\\n\uD83D\uDCC5 ${new Date(quote.data_ultima_cota).toLocaleDateString('pt-BR')}\\n${changeIcon} ${changeText}${quote.variacao_percentual.toFixed(2)}% (R$ ${changeText}${quote.variacao_dia.toFixed(6)})`\n      );\n\n    } catch (error) {\n      console.error('Error fetching fund quote:', error);\n      await this.sendResponse(\n        userId,\n        '\u274C Erro ao buscar cota\u00E7\u00E3o. Tente novamente ou verifique o nome/CNPJ do fundo.'\n      );\n    }\n  }\n\n  private async handleFundPortfolio(\n    userId: string,\n    fundStorage: KVFundStorage\n  ): Promise<void> {\n    await this.sendResponse(userId, '\uD83D\uDCCA Carregando seu portf\u00F3lio de fundos...');\n\n    try {\n      const portfolio = await fundStorage.getFundPortfolio(userId);\n      \n      if (portfolio.positions.length === 0) {\n        await this.sendResponse(\n          userId,\n          '\uD83D\uDCCA Seu portf\u00F3lio est\u00E1 vazio.\\n\\nPara adicionar um fundo, fale algo como: \"Adicionar 100 cotas do fundo XYZ que comprei por 50 reais cada\"'\n        );\n        return;\n      }\n\n      let message = `\uD83D\uDCCA SEU PORTF\u00D3LIO DE FUNDOS\\n\\n`;\n      \n      portfolio.positions.forEach((position, index) => {\n        const name = position.name || position.fundName || 'Fundo sem nome';\n        const quotas = position.quotas || position.shares || 0;\n        const avgPrice = position.avgPrice || 0;\n        const invested = position.investedAmount || (quotas * avgPrice);\n        \n        message += `${index + 1}. ${name}\\n`;\n        message += `   \uD83D\uDCB0 ${quotas} cotas a R$ ${avgPrice.toFixed(2)}\\n`;\n        message += `   \uD83D\uDCB5 Investido: R$ ${invested.toFixed(2)}\\n`;\n        \n        if (position.currentValue && position.performance !== undefined) {\n          const perfIcon = position.performance >= 0 ? '\uD83D\uDCC8' : '\uD83D\uDCC9';\n          const perfText = position.performance >= 0 ? '+' : '';\n          message += `   ${perfIcon} Atual: R$ ${position.currentValue.toFixed(2)} (${perfText}${position.performancePercent?.toFixed(2)}%)\\n`;\n        }\n        \n        message += `\\n`;\n      });\n\n      message += `\uD83D\uDCBC RESUMO TOTAL:\\n`;\n      message += `\uD83D\uDCB5 Total Investido: R$ ${portfolio.totalInvested.toFixed(2)}\\n`;\n      \n      if (portfolio.currentValue > 0 && portfolio.totalPerformance !== 0) {\n        const totalPerfIcon = portfolio.totalPerformance >= 0 ? '\uD83D\uDCC8' : '\uD83D\uDCC9';\n        const totalPerfText = portfolio.totalPerformance >= 0 ? '+' : '';\n        message += `\uD83D\uDCB0 Valor Atual: R$ ${portfolio.currentValue.toFixed(2)}\\n`;\n        message += `${totalPerfIcon} Performance: ${totalPerfText}R$ ${portfolio.totalPerformance.toFixed(2)} (${totalPerfText}${portfolio.totalPerformancePercent.toFixed(2)}%)\\n`;\n      }\n      \n      message += `\\n\uD83D\uDD50 Atualizado: ${new Date(portfolio.lastUpdated).toLocaleString('pt-BR')}`;\n\n      await this.sendResponse(userId, message);\n\n    } catch (error) {\n      console.error('Error fetching portfolio:', error);\n      await this.sendResponse(\n        userId,\n        '\u274C Erro ao carregar portf\u00F3lio. Tente novamente.'\n      );\n    }\n  }\n\n  private async handleFundUpdate(\n    transcription: string,\n    userId: string,\n    fundStorage: KVFundStorage\n  ): Promise<void> {\n    await this.sendResponse(userId, '\uD83D\uDD04 Processando atualiza\u00E7\u00E3o de posi\u00E7\u00E3o...');\n\n    try {\n      const updateData = this.parseFundUpdateCommand(transcription);\n      \n      if (!updateData.identifier) {\n        await this.sendResponse(\n          userId,\n          '\u274C N\u00E3o consegui identificar qual fundo atualizar. Fale o nome ou CNPJ do fundo.'\n        );\n        return;\n      }\n\n      const portfolio = await fundStorage.getFundPortfolio(userId);\n      \n      // Find the position by name or CNPJ\n      const position = portfolio.positions.find(p => \n        p.cnpj === updateData.identifier ||\n        (p.name && updateData.identifier && p.name.toLowerCase().includes(updateData.identifier.toLowerCase()))\n      );\n\n      if (!position) {\n        await this.sendResponse(\n          userId,\n          `\u274C Fundo \"${updateData.identifier}\" n\u00E3o encontrado no seu portf\u00F3lio.`\n        );\n        return;\n      }\n\n      if (updateData.newQuantity !== undefined) {\n        await fundStorage.updateFundPosition(\n          userId, \n          position.cnpj, \n          updateData.newQuantity, \n          updateData.newAvgPrice\n        );\n        \n        let message = `\u2705 Posi\u00E7\u00E3o atualizada!\\n\\n\uD83D\uDCCA ${position.name}\\n\uD83D\uDCB0 Nova quantidade: ${updateData.newQuantity} cotas`;\n        \n        if (updateData.newAvgPrice !== undefined) {\n          message += `\\n\uD83D\uDCB5 Novo pre\u00E7o m\u00E9dio: R$ ${updateData.newAvgPrice.toFixed(2)}`;\n        }\n        \n        await this.sendResponse(userId, message);\n      } else {\n        await this.sendResponse(\n          userId,\n          '\u274C N\u00E3o consegui identificar os novos valores. Fale algo como: \"Atualizar fundo XYZ para 150 cotas\" ou \"Mudar pre\u00E7o m\u00E9dio do fundo XYZ para 55 reais\"'\n        );\n      }\n\n    } catch (error) {\n      console.error('Error updating fund:', error);\n      await this.sendResponse(\n        userId,\n        '\u274C Erro ao atualizar posi\u00E7\u00E3o. Verifique os dados e tente novamente.'\n      );\n    }\n  }\n\n  // Text parsing methods for Portuguese voice commands\n  private parseFundAddCommand(transcription: string): {\n    name?: string;\n    cnpj?: string;\n    quantity?: number;\n    avgPrice?: number;\n    totalAmount?: number;\n  } {\n    const text = transcription.toLowerCase();\n    \n    // Extract fund name (look for common patterns)\n    let name: string | undefined;\n    \n    // Look for \"fundo [name]\" patterns\n    const fundNameMatch = text.match(/(?:fundo|fund)\\s+([a-z\u00E1\u00E0\u00E2\u00E3\u00E9\u00E8\u00EA\u00ED\u00EC\u00EE\u00F3\u00F2\u00F4\u00F5\u00FA\u00F9\u00FB\u00E7\\s\\w\\d]+?)(?:\\s+(?:que|cnpj|com|por|cotas|quotas)|\\s*$)/i);\n    if (fundNameMatch) {\n      name = fundNameMatch[1].trim();\n    }\n    \n    // Look for quoted fund names\n    const quotedMatch = text.match(/[\"']([^\"']+)[\"']/);\n    if (quotedMatch) {\n      name = quotedMatch[1];\n    }\n    \n    // Extract CNPJ\n    let cnpj: string | undefined;\n    const cnpjMatch = text.match(/(\\d{2}\\.?\\d{3}\\.?\\d{3}\\/?\\d{4}-?\\d{2})/);\n    if (cnpjMatch) {\n      cnpj = cnpjMatch[1].replace(/[^\\d]/g, '');\n    }\n    \n    // Extract quantity\n    let quantity: number | undefined;\n    const quantityMatches = [\n      text.match(/(\\d+(?:\\.\\d+)?)\\s*(?:cotas?|quotas?)/),\n      text.match(/(?:comprei|comprar|adicionar)\\s+(\\d+(?:\\.\\d+)?)/),\n      text.match(/(\\d+(?:\\.\\d+)?)\\s*(?:do|de)/),\n    ];\n    \n    for (const match of quantityMatches) {\n      if (match) {\n        quantity = parseFloat(match[1]);\n        break;\n      }\n    }\n    \n    // Extract average price\n    let avgPrice: number | undefined;\n    const priceMatches = [\n      text.match(/(?:por|pre\u00E7o|custou|valor)\\s+(?:de\\s+)?(?:r\\$\\s*)?(\\d+(?:[\\.,]\\d+)?)/),\n      text.match(/(\\d+(?:[\\.,]\\d+)?)\\s*reais?\\s+(?:cada|por\\s+cota)/),\n      text.match(/a\\s+(?:r\\$\\s*)?(\\d+(?:[\\.,]\\d+)?)/),\n    ];\n    \n    for (const match of priceMatches) {\n      if (match) {\n        avgPrice = parseFloat(match[1].replace(',', '.'));\n        break;\n      }\n    }\n    \n    // Extract total amount\n    let totalAmount: number | undefined;\n    const totalMatches = [\n      text.match(/(?:total|investimento|investir|gastei|paguei)\\s+(?:de\\s+)?(?:r\\$\\s*)?(\\d+(?:[\\.,]\\d+)?)/),\n      text.match(/(\\d+(?:[\\.,]\\d+)?)\\s*reais?\\s+(?:total|no\\s+total)/),\n    ];\n    \n    for (const match of totalMatches) {\n      if (match) {\n        totalAmount = parseFloat(match[1].replace(',', '.'));\n        break;\n      }\n    }\n    \n    return { name, cnpj, quantity, avgPrice, totalAmount };\n  }\n\n  private parseFundRemoveCommand(transcription: string): {\n    identifier?: string;\n    quantity?: number;\n  } {\n    const text = transcription.toLowerCase();\n    \n    // Extract fund identifier (name or CNPJ)\n    let identifier: string | undefined;\n    \n    // Look for \"fundo [name]\" or \"do [name]\" patterns\n    const identifierMatches = [\n      text.match(/(?:fundo|fund)\\s+([a-z\u00E1\u00E0\u00E2\u00E3\u00E9\u00E8\u00EA\u00ED\u00EC\u00EE\u00F3\u00F2\u00F4\u00F5\u00FA\u00F9\u00FB\u00E7\\s\\w\\d]+?)(?:\\s+(?:que|cnpj|com|por|cotas|quotas|remover|vender)|\\s*$)/i),\n      text.match(/(?:remover|vender|tirar).*?(?:do|da|de)\\s+([a-z\u00E1\u00E0\u00E2\u00E3\u00E9\u00E8\u00EA\u00ED\u00EC\u00EE\u00F3\u00F2\u00F4\u00F5\u00FA\u00F9\u00FB\u00E7\\s\\w\\d]+?)(?:\\s|$)/i),\n      text.match(/(\\d{2}\\.?\\d{3}\\.?\\d{3}\\/?\\d{4}-?\\d{2})/),\n    ];\n    \n    for (const match of identifierMatches) {\n      if (match) {\n        identifier = match[1].trim();\n        break;\n      }\n    }\n    \n    // Extract quantity to remove\n    let quantity: number | undefined;\n    const quantityMatches = [\n      text.match(/(?:remover|vender|tirar)\\s+(\\d+(?:\\.\\d+)?)\\s*(?:cotas?|quotas?)/),\n      text.match(/(\\d+(?:\\.\\d+)?)\\s*(?:cotas?|quotas?).*?(?:do|da|de)/),\n    ];\n    \n    for (const match of quantityMatches) {\n      if (match) {\n        quantity = parseFloat(match[1]);\n        break;\n      }\n    }\n    \n    return { identifier, quantity };\n  }\n\n  private parseFundQuoteCommand(transcription: string): string | undefined {\n    const text = transcription.toLowerCase();\n    \n    // Look for CNPJ first\n    const cnpjMatch = text.match(/(\\d{2}\\.?\\d{3}\\.?\\d{3}\\/?\\d{4}-?\\d{2})/);\n    if (cnpjMatch) {\n      return cnpjMatch[1];\n    }\n    \n    // Look for fund name patterns\n    const nameMatches = [\n      text.match(/(?:cota\u00E7\u00E3o|cota|pre\u00E7o|valor).*?(?:do|da|de)\\s+(?:fundo\\s+)?([a-z\u00E1\u00E0\u00E2\u00E3\u00E9\u00E8\u00EA\u00ED\u00EC\u00EE\u00F3\u00F2\u00F4\u00F5\u00FA\u00F9\u00FB\u00E7\\s\\w\\d]+?)(?:\\s|$)/i),\n      text.match(/(?:fundo|fund)\\s+([a-z\u00E1\u00E0\u00E2\u00E3\u00E9\u00E8\u00EA\u00ED\u00EC\u00EE\u00F3\u00F2\u00F4\u00F5\u00FA\u00F9\u00FB\u00E7\\s\\w\\d]+?)(?:\\s+(?:cota\u00E7\u00E3o|cota|pre\u00E7o|valor)|\\s*$)/i),\n      text.match(/[\"']([^\"']+)[\"']/),\n    ];\n    \n    for (const match of nameMatches) {\n      if (match) {\n        return match[1].trim();\n      }\n    }\n    \n    return undefined;\n  }\n\n  private parseFundUpdateCommand(transcription: string): {\n    identifier?: string;\n    newQuantity?: number;\n    newAvgPrice?: number;\n  } {\n    const text = transcription.toLowerCase();\n    \n    // Extract fund identifier\n    let identifier: string | undefined;\n    \n    const identifierMatches = [\n      text.match(/(?:atualizar|mudar|alterar).*?(?:do|da|de)\\s+(?:fundo\\s+)?([a-z\u00E1\u00E0\u00E2\u00E3\u00E9\u00E8\u00EA\u00ED\u00EC\u00EE\u00F3\u00F2\u00F4\u00F5\u00FA\u00F9\u00FB\u00E7\\s\\w\\d]+?)(?:\\s+(?:para|com|por)|\\s|$)/i),\n      text.match(/(?:fundo|fund)\\s+([a-z\u00E1\u00E0\u00E2\u00E3\u00E9\u00E8\u00EA\u00ED\u00EC\u00EE\u00F3\u00F2\u00F4\u00F5\u00FA\u00F9\u00FB\u00E7\\s\\w\\d]+?)(?:\\s+(?:para|com|por|atualizar)|\\s*$)/i),\n      text.match(/(\\d{2}\\.?\\d{3}\\.?\\d{3}\\/?\\d{4}-?\\d{2})/),\n    ];\n    \n    for (const match of identifierMatches) {\n      if (match) {\n        identifier = match[1].trim();\n        break;\n      }\n    }\n    \n    // Extract new quantity\n    let newQuantity: number | undefined;\n    const quantityMatches = [\n      text.match(/(?:para|com|por)\\s+(\\d+(?:\\.\\d+)?)\\s*(?:cotas?|quotas?)/),\n      text.match(/(\\d+(?:\\.\\d+)?)\\s*(?:cotas?|quotas?)/),\n    ];\n    \n    for (const match of quantityMatches) {\n      if (match) {\n        newQuantity = parseFloat(match[1]);\n        break;\n      }\n    }\n    \n    // Extract new average price\n    let newAvgPrice: number | undefined;\n    const priceMatches = [\n      text.match(/(?:pre\u00E7o|valor|por)\\s+(?:de\\s+)?(?:r\\$\\s*)?(\\d+(?:[\\.,]\\d+)?)/),\n      text.match(/(\\d+(?:[\\.,]\\d+)?)\\s*reais?\\s+(?:cada|por\\s+cota)/),\n    ];\n    \n    for (const match of priceMatches) {\n      if (match) {\n        newAvgPrice = parseFloat(match[1].replace(',', '.'));\n        break;\n      }\n    }\n    \n    return { identifier, newQuantity, newAvgPrice };\n  }\n   \n  private async sendResponse(to: string, message: string): Promise<void> {\n    // Validate phone number\n    if (!to || to.trim() === '') {\n      console.error('Cannot send message: phone number is empty');\n      return;\n    }\n    \n    // Send response back via Z-API\n    if (!this.env.Z_API_INSTANCE_ID || !this.env.Z_API_INSTANCE_TOKEN || !this.env.Z_API_SECURITY_TOKEN) {\n      console.error('Z-API credentials not configured');\n      return;\n    }\n    \n    try {\n      const url = `https://api.z-api.io/instances/${this.env.Z_API_INSTANCE_ID}/token/${this.env.Z_API_INSTANCE_TOKEN}/send-text`;\n      const body = {\n        phone: to,\n        message\n      };\n      \n      console.log('Sending Z-API message from AudioProcessor:', {\n        url,\n        to,\n        messageLength: message.length,\n        hasClientToken: !!this.env.Z_API_SECURITY_TOKEN\n      });\n      \n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Client-Token': this.env.Z_API_SECURITY_TOKEN\n        },\n        body: JSON.stringify(body)\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Z-API error response:', {\n          status: response.status,\n          statusText: response.statusText,\n          error: errorText\n        });\n        throw new Error(`Z-API error: ${response.status} - ${errorText}`);\n      }\n      \n      console.log('Z-API message sent successfully from AudioProcessor');\n    } catch (error) {\n      console.error('Error sending response via Z-API:', error);\n    }\n  }\n}", "/**\n * Simplified index for Jarvis Bot - working version\n */\n\nimport { Env } from './types/env';\nimport { AudioProcessor } from './router/AudioProcessor';\nimport { ZApiWebhookPayload } from './services/whatsapp/types';\nimport { PortfolioTracker } from './modules/portfolio-tracker';\n\nexport default {\n  async scheduled(\n    _controller: ScheduledController,\n    env: Env,\n    _ctx: ExecutionContext\n  ): Promise<void> {\n    // Portfolio daily report\n    if (env.BRAPI_TOKEN && env.Z_API_INSTANCE_ID && env.Z_API_INSTANCE_TOKEN && \n        env.Z_API_CLIENT_TOKEN && env.PORTFOLIO_WHATSAPP_NUMBER) {\n      try {\n        const portfolioTracker = new PortfolioTracker({\n          brapiToken: env.BRAPI_TOKEN,\n          zApiInstanceId: env.Z_API_INSTANCE_ID,\n          zApiInstanceToken: env.Z_API_INSTANCE_TOKEN,\n          zApiSecurityToken: env.Z_API_CLIENT_TOKEN,\n          whatsappNumber: env.PORTFOLIO_WHATSAPP_NUMBER,\n          zaisenApiUrl: env.ZAISEN_API_URL,\n          zaisenApiKey: env.ZAISEN_API_KEY,\n        });\n        \n        await portfolioTracker.sendDailyReport(env.PORTFOLIO_DATA, env.FUND_PORTFOLIO_DATA);\n        console.log('Daily portfolio report sent successfully');\n      } catch (error) {\n        console.error('Error sending daily portfolio report:', error);\n      }\n    }\n  },\n\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\n    const url = new URL(request.url);\n    \n    // Health check\n    if (url.pathname === '/health') {\n      return new Response(JSON.stringify({ \n        status: 'healthy', \n        timestamp: new Date().toISOString(),\n        service: 'jarvis-bot' \n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    // Webhook handler\n    if (url.pathname === '/webhook' && request.method === 'POST') {\n      // Authenticate with Client-Token\n      const clientToken = request.headers.get('Client-Token');\n      if (clientToken !== env.Z_API_CLIENT_TOKEN) {\n        return new Response('Unauthorized', { status: 401 });\n      }\n      \n      try {\n        const payload = await request.json() as ZApiWebhookPayload;\n        \n        // Handle audio messages\n        if (payload.event === 'message.received' && \n            payload.data?.message?.type === 'audio' &&\n            !payload.data?.message?.fromMe) {\n          \n          try {\n            const processor = new AudioProcessor(env);\n            // Transform the message to match expected format\n            const audioPayload = {\n              ...payload,\n              audio: payload.data.message.body,\n              from: payload.data.message.from,\n              phone: payload.data.message.from,\n              senderNumber: payload.data.message.from,\n            };\n            await processor.handleAudioMessage(audioPayload);\n            \n            return new Response(JSON.stringify({ \n              success: true,\n              message: 'Audio message processed'\n            }), {\n              status: 200,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          } catch (error) {\n            console.error('Audio processing error:', error);\n            return new Response(JSON.stringify({ \n              success: false,\n              message: 'Audio processing failed',\n              error: error instanceof Error ? error.message : 'Unknown error'\n            }), {\n              status: 200,  // Still return 200 to acknowledge webhook\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n        }\n        \n        // Acknowledge other messages\n        return new Response(JSON.stringify({ \n          success: true,\n          message: 'Webhook received'\n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        });\n        \n      } catch (error) {\n        console.error('Webhook processing error:', error);\n        return new Response('Bad Request', { status: 400 });\n      }\n    }\n    \n    return new Response('Not Found', { status: 404 });\n  },\n};", "import { calculatePortfolioValue } from './calculator';\nimport { formatPortfolioMessage } from './message-formatter';\nimport { sendWhatsAppMessage } from './whatsapp-sender';\nimport { calculateFundPortfolioValue, ZaisenFundAPI } from '../fund-tracker';\nimport { loadFundPortfolioData } from '../fund-tracker/fund-data';\n\nexport interface PortfolioConfig {\n  brapiToken: string;\n  zApiInstanceId: string;\n  zApiInstanceToken: string;\n  zApiSecurityToken: string;\n  whatsappNumber: string;\n  zaisenApiUrl?: string;\n  zaisenApiKey?: string;\n}\n\nexport interface CombinedPortfolioData {\n  stocks: any;\n  funds: any;\n  hasFunds: boolean;\n}\n\nexport class PortfolioTracker {\n  constructor(private config: PortfolioConfig) {}\n\n  async sendDailyReport(portfolioDataEnv?: string, fundPortfolioDataEnv?: string): Promise<void> {\n    try {\n      console.log('Starting portfolio calculation...');\n      \n      const portfolioData = await this.getCombinedPortfolioData(portfolioDataEnv, fundPortfolioDataEnv);\n      const message = formatPortfolioMessage(portfolioData.stocks, portfolioData.funds, portfolioData.hasFunds);\n      \n      await sendWhatsAppMessage(\n        this.config.zApiInstanceId,\n        this.config.zApiInstanceToken,\n        this.config.zApiSecurityToken,\n        this.config.whatsappNumber,\n        message\n      );\n      \n      console.log('Portfolio WhatsApp message sent successfully');\n    } catch (error) {\n      console.error('Error sending portfolio report:', error);\n      throw error;\n    }\n  }\n\n  async getPortfolioData(portfolioData?: string) {\n    return calculatePortfolioValue(this.config.brapiToken, portfolioData);\n  }\n\n  async getFundPortfolioData(fundPortfolioData?: string) {\n    if (!this.config.zaisenApiUrl || !this.config.zaisenApiKey) {\n      console.log('Fund tracking disabled - missing Zaisen API configuration');\n      return null;\n    }\n\n    try {\n      const fundPortfolio = loadFundPortfolioData(fundPortfolioData);\n      const fundAPI = new ZaisenFundAPI(this.config.zaisenApiUrl, this.config.zaisenApiKey);\n      return await calculateFundPortfolioValue(fundPortfolio, fundAPI);\n    } catch (error) {\n      console.error('Error calculating fund portfolio:', error);\n      return null;\n    }\n  }\n\n  async getCombinedPortfolioData(portfolioData?: string, fundPortfolioData?: string): Promise<CombinedPortfolioData> {\n    const [stocksData, fundsData] = await Promise.all([\n      calculatePortfolioValue(this.config.brapiToken, portfolioData),\n      this.getFundPortfolioData(fundPortfolioData)\n    ]);\n\n    return {\n      stocks: stocksData,\n      funds: fundsData,\n      hasFunds: fundsData !== null\n    };\n  }\n\n  isFundTrackingEnabled(): boolean {\n    return !!(this.config.zaisenApiUrl && this.config.zaisenApiKey);\n  }\n}\n\nexport * from './types';\nexport * from './calculator';\nexport * from './message-formatter';\nexport * from './whatsapp-sender';\n", "import { PortfolioCalculation } from './types';\nimport { loadPortfolioData } from './portfolio-data';\nimport { fetchAllPrices } from './stock-api';\n\nexport async function calculatePortfolioValue(brapiToken: string, portfolioData?: string): Promise<PortfolioCalculation> {\n  const portfolio = loadPortfolioData(portfolioData);\n  const stockData = await fetchAllPrices(brapiToken, portfolio);\n  \n  let currentValue = 0;\n  let previousCloseValue = 0;\n  \n  const details = portfolio.map((item) => {\n    const data = stockData.get(item.ticker);\n    if (data) {\n      const position = data.price * item.shares;\n      const previousPosition = data.previousClose * item.shares;\n      currentValue += position;\n      previousCloseValue += previousPosition;\n      \n      return {\n        ticker: item.ticker,\n        currentPrice: data.price,\n        position,\n        dailyChange: data.change * item.shares,\n        dailyChangePercent: data.changePercent\n      };\n    }\n    return {\n      ticker: item.ticker,\n      currentPrice: null,\n      position: 0,\n      dailyChange: 0,\n      dailyChangePercent: 0\n    };\n  });\n\n  const totalCost = portfolio.reduce((sum, item) => sum + (item.avgPrice * item.shares), 0);\n  const dailyPnL = currentValue - previousCloseValue;\n  const dailyPercentageChange = previousCloseValue > 0 ? (dailyPnL / previousCloseValue) * 100 : 0;\n  const totalPnL = currentValue - totalCost;\n  const totalPercentageChange = (totalPnL / totalCost) * 100;\n\n  return {\n    currentValue,\n    previousCloseValue,\n    totalCost,\n    dailyPnL,\n    dailyPercentageChange,\n    totalPnL,\n    totalPercentageChange,\n    details\n  };\n}\n", "import { PortfolioItem } from './types';\n\n// Default fallback portfolio data\nconst DEFAULT_PORTFOLIO: PortfolioItem[] = [\n  { ticker: 'AAPL34', shares: 100, avgPrice: 50.0 },\n  { ticker: 'VALE3', shares: 500, avgPrice: 60.0 }\n];\n\n// This will be dynamically loaded in the calculator\nexport const PORTFOLIO: PortfolioItem[] = DEFAULT_PORTFOLIO;\n\nexport function loadPortfolioData(portfolioData?: string): PortfolioItem[] {\n  if (portfolioData) {\n    try {\n      return JSON.parse(portfolioData);\n    } catch (error) {\n      console.error('Error parsing PORTFOLIO_DATA:', error);\n    }\n  }\n  return DEFAULT_PORTFOLIO;\n}\n", "import { StockData, PortfolioItem } from './types';\n\nexport async function fetchAllPrices(brapiToken: string, portfolio: PortfolioItem[]): Promise<Map<string, StockData>> {\n  const stockData = new Map<string, StockData>();\n  const uniqueTickers = [...new Set(portfolio.map(item => item.ticker))];\n  \n  console.log(`Fetching prices for: ${uniqueTickers.join(', ')}`);\n  \n  // Try batch request first (up to 10 tickers)\n  if (uniqueTickers.length <= 10) {\n    try {\n      const tickerList = uniqueTickers.join(',');\n      const url = `https://brapi.dev/api/quote/${tickerList}?token=${brapiToken}`;\n      console.log(`Batch fetching: ${tickerList}`);\n      \n      const response = await fetch(url);\n      if (response.ok) {\n        const data = await response.json() as any;\n        if (data.results && Array.isArray(data.results)) {\n          for (const stock of data.results) {\n            if (stock.symbol && stock.regularMarketPrice !== null && stock.regularMarketPreviousClose !== null) {\n              stockData.set(stock.symbol, {\n                price: stock.regularMarketPrice,\n                previousClose: stock.regularMarketPreviousClose,\n                change: stock.regularMarketChange || 0,\n                changePercent: stock.regularMarketChangePercent || 0\n              });\n              console.log(`${stock.symbol}: R$ ${stock.regularMarketPrice.toFixed(2)} (${stock.regularMarketChangePercent?.toFixed(2)}%)`);\n            }\n          }\n          console.log(`Batch request successful: ${stockData.size}/${uniqueTickers.length} stocks`);\n          return stockData;\n        }\n      }\n    } catch (error) {\n      console.error('Batch request failed, falling back to individual requests:', error);\n    }\n  }\n  \n  // Fallback: fetch one ticker at a time\n  for (const ticker of uniqueTickers) {\n    try {\n      const url = `https://brapi.dev/api/quote/${ticker}?token=${brapiToken}`;\n      console.log(`Fetching ${ticker}...`);\n      \n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        console.error(`Error fetching ${ticker}: ${response.status} ${response.statusText}`);\n        continue;\n      }\n      \n      const data = await response.json() as any;\n      \n      if (data.results && data.results[0]) {\n        const stock = data.results[0];\n        if (stock.regularMarketPrice !== null && stock.regularMarketPreviousClose !== null) {\n          stockData.set(ticker, {\n            price: stock.regularMarketPrice,\n            previousClose: stock.regularMarketPreviousClose,\n            change: stock.regularMarketChange || 0,\n            changePercent: stock.regularMarketChangePercent || 0\n          });\n          console.log(`${ticker}: R$ ${stock.regularMarketPrice.toFixed(2)} (${stock.regularMarketChangePercent?.toFixed(2)}%)`);\n        }\n      } else {\n        console.log(`No price data for ${ticker}`);\n      }\n      \n      // Small delay to avoid rate limiting\n      await new Promise(resolve => setTimeout(resolve, 100));\n    } catch (error) {\n      console.error(`Error fetching ${ticker}:`, error);\n    }\n  }\n  \n  console.log(`Returning ${stockData.size} stocks with data`);\n  return stockData;\n}\n", "import { PortfolioCalculation } from './types';\nimport { FundCalculation } from '../fund-tracker/types';\n\nexport function formatPortfolioMessage(\n  stocksData: PortfolioCalculation, \n  fundsData: FundCalculation | null = null, \n  hasFunds: boolean = false\n): string {\n  // Calculate combined totals if funds are included\n  let combinedCurrentValue, combinedTotalCost, combinedDailyPnL, combinedTotalPnL;\n  let combinedDailyPercentageChange, combinedTotalPercentageChange;\n\n  if (hasFunds && fundsData) {\n    combinedCurrentValue = stocksData.currentValue + fundsData.currentValue;\n    combinedTotalCost = stocksData.totalCost + fundsData.totalCost;\n    combinedDailyPnL = stocksData.dailyPnL + fundsData.dailyPnL;\n    combinedTotalPnL = stocksData.totalPnL + fundsData.totalPnL;\n    \n    const combinedPreviousValue = combinedCurrentValue - combinedDailyPnL;\n    combinedDailyPercentageChange = combinedPreviousValue > 0 ? (combinedDailyPnL / combinedPreviousValue) * 100 : 0;\n    combinedTotalPercentageChange = combinedTotalCost > 0 ? (combinedTotalPnL / combinedTotalCost) * 100 : 0;\n  } else {\n    combinedCurrentValue = stocksData.currentValue;\n    combinedTotalCost = stocksData.totalCost;\n    combinedDailyPnL = stocksData.dailyPnL;\n    combinedTotalPnL = stocksData.totalPnL;\n    combinedDailyPercentageChange = stocksData.dailyPercentageChange;\n    combinedTotalPercentageChange = stocksData.totalPercentageChange;\n  }\n  \n  const dailyEmoji = combinedDailyPnL >= 0 ? '\uD83D\uDCC8' : '\uD83D\uDCC9';\n  const dailySign = combinedDailyPnL >= 0 ? '+' : '';\n  const totalSign = combinedTotalPnL >= 0 ? '+' : '';\n  \n  // Count how many stocks have prices\n  const stocksWithPrices = stocksData.details.filter(d => d.currentPrice !== null).length;\n  const totalStocks = stocksData.details.length;\n  \n  // Count how many funds have quotes\n  const fundsWithQuotes = fundsData ? fundsData.details.filter(d => d.currentQuote !== null).length : 0;\n  const totalFunds = fundsData ? fundsData.details.length : 0;\n  \n  let message = `${dailyEmoji} *Relat\u00F3rio Di\u00E1rio da Carteira* ${dailyEmoji}\\n\\n`;\n  message += `\uD83D\uDCB0 *Valor Total:* R$ ${combinedCurrentValue.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\\n\\n`;\n  \n  message += `\uD83D\uDCC5 *Resultado do Dia:*\\n`;\n  message += `${combinedDailyPnL >= 0 ? '\uD83D\uDC9A' : '\uD83D\uDD34'} ${dailySign}R$ ${combinedDailyPnL.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} (${dailySign}${combinedDailyPercentageChange.toFixed(2)}%)\\n\\n`;\n  \n  message += `\uD83D\uDCCA *Resultado Total:*\\n`;\n  message += `\uD83D\uDCB5 Custo: R$ ${combinedTotalCost.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\\n`;\n  message += `${combinedTotalPnL >= 0 ? '\uD83D\uDC9A' : '\uD83D\uDD34'} P&L: ${totalSign}R$ ${combinedTotalPnL.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} (${totalSign}${combinedTotalPercentageChange.toFixed(2)}%)\\n\\n`;\n  \n  // Breakdown by asset type\n  message += `\uD83D\uDCCA *Detalhes por Categoria:*\\n`;\n  message += `\uD83D\uDCC8 A\u00E7\u00F5es: R$ ${stocksData.currentValue.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} (${stocksWithPrices}/${totalStocks} com cota\u00E7\u00E3o)\\n`;\n  \n  if (hasFunds && fundsData) {\n    message += `\uD83C\uDFE6 Fundos: R$ ${fundsData.currentValue.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} (${fundsWithQuotes}/${totalFunds} com cota\u00E7\u00E3o)\\n`;\n  }\n  \n  message += `\\n_Enviado \u00E0s ${new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' })}_`;\n  \n  return message;\n}\n", "export async function sendWhatsAppMessage(\n  instanceId: string,\n  token: string,\n  securityToken: string,\n  phone: string,\n  message: string\n): Promise<void> {\n  const response = await fetch(`https://api.z-api.io/instances/${instanceId}/token/${token}/send-text`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Client-Token': securityToken\n    },\n    body: JSON.stringify({\n      phone,\n      message\n    })\n  });\n\n  if (!response.ok) {\n    const errorData = await response.text();\n    throw new Error(`Failed to send WhatsApp message: ${response.statusText} - ${errorData}`);\n  }\n}\n", "export * from './types';\nexport * from './fund-api';\nexport * from './calculator';\nexport * from './fund-data';\nexport * from './storage';\n\n// Main exports for easy importing\nexport { ZaisenFundAPI, createFundAPI } from './fund-api';\nexport { calculateFundPortfolioValue, formatCurrency, formatPercent, calculatePositionWeight, analyzePortfolioRisk } from './calculator';\nexport { FUND_PORTFOLIO, isValidCNPJ, formatCNPJ, cleanCNPJ } from './fund-data';\nexport type {\n  FundPosition,\n  FundQuote,\n  UserFundPortfolio,\n  FundPortfolioCalculation,\n  FundSearchResult,\n  FundDetails,\n  FundCalculation,\n  LatestQuoteResponse,\n  ZaisenAPIResponse\n} from './types';\n", "// Fund position interface that supports both legacy and new formats\nexport interface FundPosition {\n  id?: string;\n  cnpj: string;\n  // Support both legacy and new naming\n  fundName?: string;\n  name?: string;\n  shares?: number;\n  quotas?: number;\n  investedAmount?: number;\n  avgPrice: number;\n  addedDate?: string;\n  purchaseDate?: string;\n  currentQuotaValue?: number;\n  currentValue?: number;\n  performance?: number;\n  performancePercent?: number;\n}\n\n// Existing user fund portfolio interface for storage\nexport interface UserFundPortfolio {\n  userId?: string;\n  positions: FundPosition[];\n  totalInvested: number;\n  currentValue: number;\n  totalPerformance: number;\n  totalPerformancePercent: number;\n  lastUpdated: string;\n}\n\n// Existing portfolio calculation interface\nexport interface FundPortfolioCalculation {\n  totalInvested: number;\n  currentValue: number;\n  totalPerformance: number;\n  totalPerformancePercent: number;\n  positions: Array<{\n    cnpj: string;\n    name: string;\n    quotas: number;\n    avgPrice: number;\n    currentQuotaValue: number;\n    currentValue: number;\n    performance: number;\n    performancePercent: number;\n  }>;\n}\n\n// New interfaces for API integration\nexport interface FundQuote {\n  cnpj: string;\n  name: string;\n  lastQuote: number;\n  quoteDate: string;\n  dailyChange: number;\n  dailyChangePercent: number;\n}\n\nexport interface FundSearchResult {\n  cnpj: string;\n  nome: string;\n  classe: string;\n  situacao: string;\n  administrador: string;\n  gestor: string;\n  patrimonio_liquido: number;\n}\n\nexport interface FundDetails {\n  cnpj: string;\n  nome: string;\n  classe: string;\n  situacao: string;\n  administrador: string;\n  gestor: string;\n  patrimonio_liquido: number;\n  ultima_cota?: number;\n  data_ultima_cota?: string;\n  variacao_dia?: number;\n  variacao_percentual?: number;\n  patrimonio_liquido_atualizado?: number;\n  numero_cotistas_atualizado?: number;\n}\n\nexport interface FundCalculation {\n  currentValue: number;\n  totalCost: number;\n  dailyPnL: number;\n  dailyPercentageChange: number;\n  totalPnL: number;\n  totalPercentageChange: number;\n  details: Array<{\n    cnpj: string;\n    name: string;\n    currentQuote: number | null;\n    position: number;\n    dailyChange: number;\n    dailyChangePercent: number;\n  }>;\n}\n\nexport interface ZaisenAPIResponse<T> {\n  funds?: T[];\n  total?: number;\n  limit?: number;\n  offset?: number;\n  has_next?: boolean;\n}\n\nexport interface LatestQuoteResponse {\n  cnpj: string;\n  nome: string;\n  ultima_cota: number;\n  data_ultima_cota: string;\n  variacao_dia: number;\n  variacao_percentual: number;\n  patrimonio_liquido: number;\n  numero_cotistas: number;\n}\n", "import { FundCalculation, FundPosition, LatestQuoteResponse } from './types';\nimport { ZaisenFundAPI } from './fund-api';\n\nexport async function calculateFundPortfolioValue(\n  portfolio: FundPosition[],\n  fundAPI: ZaisenFundAPI\n): Promise<FundCalculation> {\n  const quoteData = new Map<string, LatestQuoteResponse>();\n  \n  console.log(`Fetching quotes for: ${portfolio.map(p => p.cnpj).join(', ')}`);\n  \n  // Fetch quotes for all funds\n  for (const position of portfolio) {\n    try {\n      console.log(`Fetching quote for ${position.cnpj} (${position.name})...`);\n      \n      const quote = await fundAPI.getFundQuote(position.cnpj);\n      \n      if (quote) {\n        quoteData.set(position.cnpj, quote);\n        console.log(`${position.name}: R$ ${quote.ultima_cota.toFixed(6)} (${quote.variacao_percentual?.toFixed(2)}%)`);\n      } else {\n        console.log(`No quote data for ${position.name} (${position.cnpj})`);\n      }\n      \n      // Small delay to avoid rate limiting\n      await new Promise(resolve => setTimeout(resolve, 100));\n    } catch (error) {\n      console.error(`Error fetching quote for ${position.cnpj}:`, error);\n    }\n  }\n  \n  let currentValue = 0;\n  \n  const details = portfolio.map((position) => {\n    const quote = quoteData.get(position.cnpj);\n    if (quote) {\n      // Use stored quotas or calculate from invested amount \u00F7 average price\n      const quotas = position.quotas || (position.investedAmount && position.avgPrice ? position.investedAmount / position.avgPrice : 0);\n      \n      // Calculate current value: quotas \u00D7 current quote\n      const positionValue = parseFloat(quote.ultima_cota) * quotas;\n      currentValue += positionValue;\n      \n      return {\n        cnpj: position.cnpj,\n        name: position.name || position.fundName || '',\n        currentQuote: parseFloat(quote.ultima_cota),\n        position: positionValue,\n        dailyChange: parseFloat(quote.variacao_dia || '0') * quotas,\n        dailyChangePercent: parseFloat(quote.variacao_percentual || '0')\n      };\n    }\n    return {\n      cnpj: position.cnpj,\n      name: position.name || position.fundName || '',\n      currentQuote: null,\n      position: 0,\n      dailyChange: 0,\n      dailyChangePercent: 0\n    };\n  });\n\n  const totalCost = portfolio.reduce((sum, position) => sum + (position.investedAmount || 0), 0);\n  const dailyPnL = details.reduce((sum, detail) => sum + detail.dailyChange, 0);\n  const totalPnL = currentValue - totalCost;\n  \n  // Calculate daily percentage change based on previous day value\n  const previousDayValue = currentValue - dailyPnL;\n  const dailyPercentageChange = previousDayValue > 0 ? (dailyPnL / previousDayValue) * 100 : 0;\n  const totalPercentageChange = totalCost > 0 ? (totalPnL / totalCost) * 100 : 0;\n\n  console.log(`Returning portfolio with ${quoteData.size} funds with data`);\n  \n  return {\n    currentValue,\n    totalCost,\n    dailyPnL,\n    dailyPercentageChange,\n    totalPnL,\n    totalPercentageChange,\n    details\n  };\n}\n\nexport function formatCurrency(value: number): string {\n  return new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  }).format(value);\n}\n\nexport function formatPercent(value: number): string {\n  return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`;\n}\n\nexport function calculatePositionWeight(positionValue: number, totalPortfolioValue: number): number {\n  return totalPortfolioValue > 0 ? (positionValue / totalPortfolioValue) * 100 : 0;\n}\n\nexport function analyzePortfolioRisk(portfolio: FundPosition[]): {\n  diversificationScore: number;\n  fundCount: number;\n  largestPositionWeight: number;\n  concentrationRisk: 'LOW' | 'MEDIUM' | 'HIGH';\n} {\n  const fundCount = portfolio.length;\n  \n  if (fundCount === 0) {\n    return {\n      diversificationScore: 0,\n      fundCount: 0,\n      largestPositionWeight: 0,\n      concentrationRisk: 'HIGH'\n    };\n  }\n\n  const totalInvested = portfolio.reduce((sum, p) => sum + (p.investedAmount || 0), 0);\n  const weights = portfolio.map(p => ((p.investedAmount || 0) / totalInvested) * 100);\n  const largestPositionWeight = Math.max(...weights);\n  \n  // Simple diversification score based on number of funds and largest position\n  let diversificationScore = Math.min(fundCount * 10, 100); // Max 100 points\n  if (largestPositionWeight > 50) diversificationScore -= 30;\n  else if (largestPositionWeight > 30) diversificationScore -= 15;\n  \n  let concentrationRisk: 'LOW' | 'MEDIUM' | 'HIGH' = 'LOW';\n  if (largestPositionWeight > 50 || fundCount < 3) {\n    concentrationRisk = 'HIGH';\n  } else if (largestPositionWeight > 30 || fundCount < 5) {\n    concentrationRisk = 'MEDIUM';\n  }\n\n  return {\n    diversificationScore: Math.max(0, diversificationScore),\n    fundCount,\n    largestPositionWeight,\n    concentrationRisk\n  };\n}\n", "import { FundPosition } from './types';\n\n// Default fallback fund portfolio\nconst DEFAULT_FUND_PORTFOLIO: FundPosition[] = [\n  {\n    cnpj: '00.000.000/0001-00',\n    name: 'Example Fund A',\n    quotas: 100,\n    investedAmount: 10000,\n    avgPrice: 100.0,\n    purchaseDate: '2024-01-15'\n  },\n  {\n    cnpj: '11.111.111/0001-11',\n    name: 'Example Fund B',\n    quotas: 50,\n    investedAmount: 5000,\n    avgPrice: 100.0,\n    purchaseDate: '2024-02-10'\n  }\n];\n\n// This will be dynamically loaded\nexport const FUND_PORTFOLIO: FundPosition[] = DEFAULT_FUND_PORTFOLIO;\n\nexport function loadFundPortfolioData(fundPortfolioData?: string): FundPosition[] {\n  if (fundPortfolioData) {\n    try {\n      return JSON.parse(fundPortfolioData);\n    } catch (error) {\n      console.error('Error parsing FUND_PORTFOLIO_DATA:', error);\n    }\n  }\n  return DEFAULT_FUND_PORTFOLIO;\n}\n\n// Helper function to validate CNPJ format\nexport function isValidCNPJ(cnpj: string): boolean {\n  // Remove non-numeric characters\n  const cleanCnpj = cnpj.replace(/[^\\d]/g, '');\n  \n  // Check if it has 14 digits\n  if (cleanCnpj.length !== 14) {\n    return false;\n  }\n  \n  // Basic CNPJ validation\n  return true; // For now, just check length. Could implement full CNPJ validation if needed\n}\n\n// Helper function to format CNPJ\nexport function formatCNPJ(cnpj: string): string {\n  const cleanCnpj = cnpj.replace(/[^\\d]/g, '');\n  if (cleanCnpj.length === 14) {\n    return cleanCnpj.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, '$1.$2.$3/$4-$5');\n  }\n  return cnpj;\n}\n\n// Helper function to clean CNPJ (remove formatting)\nexport function cleanCNPJ(cnpj: string): string {\n  return cnpj.replace(/[^\\d]/g, '');\n}\n", "export interface PortfolioItem {\n  ticker: string;\n  shares: number;\n  avgPrice: number;\n}\n\nexport interface StockData {\n  price: number;\n  previousClose: number;\n  change: number;\n  changePercent: number;\n}\n\nexport interface PortfolioCalculation {\n  currentValue: number;\n  previousCloseValue: number;\n  totalCost: number;\n  dailyPnL: number;\n  dailyPercentageChange: number;\n  totalPnL: number;\n  totalPercentageChange: number;\n  details: Array<{\n    ticker: string; \n    currentPrice: number | null; \n    position: number;\n    dailyChange: number;\n    dailyChangePercent: number;\n  }>\n}\n"],
  "mappings": "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ACA,SACA,QACA,WACA,QACA,SACA,SACA,QACA,WACA,QACA,YACA,YACA,SACA,cACA,UACA,eACA,WACA,eACA,iBACA,mBACA,oBACA,OACA,kBACA,WACA,4BACA,2BACA,eACA,aACA,cACA,iBACA,UACA,OACA,gBAEI,UA8GC;AAnOP,IAAAC,gBAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAAA;AACA;AACA,IAAM,gBAAgB,WAAW,SAAS;AACnC,IAAM,mBAAmB,cAAc;AACvC,KAAM,EAAE,MAAM,UAAU,aAAa;AAAA,MAC1C;AAAA,IACF;AACA,IAAM,eAAe,IAAI,QAAa;AAAA,MACpC,KAAK,cAAc;AAAA,MACnB;AAAA,MACA;AAAA,IACF,CAAC;AACM,KAAM;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAAH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAAC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AA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",
  "names": ["init_performance", "init_performance", "PerformanceMark", "init_performance", "init_performance", "init_performance", "init_performance", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "init_console", "init_performance", "init_console", "init_performance", "hrtime", "init_performance", "dir", "env", "count", "init_performance", "init_performance", "init_performance", "init_performance", "cwd", "hrtime", "assert", "init_process", "init_performance", "init_process", "init_performance", "error", "error", "init_performance", "init_performance", "init_performance", "context", "error", "init_performance", "init_performance", "env", "init_performance", "env", "error", "init_performance", "init_performance", "context", "error", "env", "EnhancedKVNoteStorage", "AudioProcessor", "init_performance", "init_storage", "init_performance", "error", "init_performance", "error", "init_performance", "init_storage", "env", "context", "error", "init_performance", "init_performance", "init_performance", "init_performance", "error", "init_performance", "error", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "error", "init_performance", "error", "init_storage", "init_performance", "config", "error", "env", "error"]
}
